import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,b as a,o as i}from"./app-Bn4Nr-M4.js";const r={};function n(s,t){return i(),l("div",null,t[0]||(t[0]=[a(`<h2 id="一、rag技术概述" tabindex="-1"><a class="header-anchor" href="#一、rag技术概述"><span>一、RAG技术概述</span></a></h2><h3 id="_1-1-rag的定义与发展历程" tabindex="-1"><a class="header-anchor" href="#_1-1-rag的定义与发展历程"><span>1.1 RAG的定义与发展历程</span></a></h3><p>检索增强生成（Retrieval-Augmented Generation, RAG）是一种将信息检索技术与生成式语言模型相结合的新型架构。其核心思想是在文本生成过程中动态引入外部知识源的信息作为上下文参考。这一概念最早由Facebook AI Research(现Meta AI)在2020年提出[1]，旨在解决传统语言模型的以下局限性：</p><ul><li><strong>知识固化问题</strong>：传统语言模型的参数化知识在训练完成后即固定不变</li><li><strong>事实准确性不足</strong>：容易产生看似合理但实际错误的&quot;幻觉&quot;(hallucination)内容</li><li><strong>领域适应性差</strong>：难以适应特定领域的专业知识和最新信息</li></ul><h3 id="_1-2-rag与传统语言模型的对比" tabindex="-1"><a class="header-anchor" href="#_1-2-rag与传统语言模型的对比"><span>1.2 RAG与传统语言模型的对比</span></a></h3><table><thead><tr><th>特性</th><th>传统语言模型</th><th>RAG架构</th></tr></thead><tbody><tr><td>知识存储方式</td><td>参数化存储</td><td>参数化+非参数化</td></tr><tr><td>知识更新机制</td><td>需要重新训练</td><td>可动态更新检索库</td></tr><tr><td>事实准确性</td><td>中等</td><td>较高</td></tr><tr><td>计算资源需求</td><td>推理时较低</td><td>推理时较高</td></tr><tr><td>可解释性</td><td>低</td><td>相对较高</td></tr><tr><td>领域适应性</td><td>需要微调</td><td>通过检索库调整</td></tr></tbody></table><h2 id="二、rag核心架构与技术原理" tabindex="-1"><a class="header-anchor" href="#二、rag核心架构与技术原理"><span>二、RAG核心架构与技术原理</span></a></h2><h3 id="_2-1-rag基础架构" tabindex="-1"><a class="header-anchor" href="#_2-1-rag基础架构"><span>2.1 RAG基础架构</span></a></h3><p>典型的RAG系统由三个核心组件构成：</p><ol><li><p><strong>检索器(Retriever)</strong>：</p><ul><li>负责从知识库中检索相关文档</li><li>常用双编码器架构(如DPR)或稠密检索模型</li><li>支持多种索引结构(如FAISS, Annoy等)</li></ul></li><li><p><strong>生成器(Generator)</strong>：</p><ul><li>基于检索结果生成最终输出</li><li>通常采用预训练语言模型(如GPT, T5等)</li><li>支持多种解码策略(beam search, sampling等)</li></ul></li><li><p><strong>知识库(Knowledge Base)</strong>：</p><ul><li>存储可供检索的结构化/非结构化数据</li><li>需要定期更新维护</li><li>支持多种格式(文本, 表格, 图谱等)</li></ul></li></ol><h3 id="_2-2-rag工作流程详解" tabindex="-1"><a class="header-anchor" href="#_2-2-rag工作流程详解"><span>2.2 RAG工作流程详解</span></a></h3><ol><li><p><strong>查询处理阶段</strong>：</p><ul><li>用户输入query经过预处理(分词, 归一化等)</li><li>可能进行query扩展或重写</li><li>生成稠密向量表示</li></ul></li><li><p><strong>检索阶段</strong>：</p><ul><li>计算query向量与文档向量的相似度</li><li>返回top-k相关文档片段</li><li>可能进行多轮迭代检索</li></ul></li><li><p><strong>生成阶段</strong>：</p><ul><li>将query和检索结果拼接为prompt</li><li>语言模型基于上下文生成响应</li><li>可能进行后处理和验证</li></ul></li></ol><h3 id="_2-3-rag的数学形式化表示" tabindex="-1"><a class="header-anchor" href="#_2-3-rag的数学形式化表示"><span>2.3 RAG的数学形式化表示</span></a></h3><p>给定输入x和知识库D={d₁,...,d_N}，RAG模型的生成过程可表示为：</p><p>p(y|x) = Σ_{d∈Top-k(D,x)} p(d|x) · p(y|x,d)</p><p>其中：</p><ul><li>p(d|x)表示文档d与x的相关性概率</li><li>p(y|x,d)表示基于x和d的条件生成概率</li><li>Top-k(D,x)表示知识库D中与x最相关的k个文档</li></ul><h2 id="三、rag关键技术实现" tabindex="-1"><a class="header-anchor" href="#三、rag关键技术实现"><span>三、RAG关键技术实现</span></a></h2><h3 id="_3-1-检索器优化技术" tabindex="-1"><a class="header-anchor" href="#_3-1-检索器优化技术"><span>3.1 检索器优化技术</span></a></h3><h4 id="_3-1-1-稠密检索-vs-稀疏检索" tabindex="-1"><a class="header-anchor" href="#_3-1-1-稠密检索-vs-稀疏检索"><span>3.1.1 稠密检索 vs 稀疏检索</span></a></h4><table><thead><tr><th>类型</th><th>代表方法</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>稀疏检索</td><td>BM25, TF-IDF</td><td>计算高效,无需训练</td><td>语义捕捉能力有限</td></tr><tr><td>稠密检索</td><td>DPR, ANCE</td><td>语义理解能力强</td><td>需要训练,计算成本高</td></tr></tbody></table><h4 id="_3-1-2-高级检索技术" tabindex="-1"><a class="header-anchor" href="#_3-1-2-高级检索技术"><span>3.1.2 高级检索技术</span></a></h4><ol><li><p><strong>多向量检索(Multi-Vector)</strong>：</p><ul><li>每个文档表示为多个向量(如段落级)</li><li>ColBERT是典型代表</li><li>提高细粒度匹配能力</li></ul></li><li><p><strong>交叉编码器重排序</strong>：</p><ul><li>使用计算密集型模型对初检结果重排序</li><li>显著提升精度但增加延迟</li></ul></li><li><p><strong>迭代式检索</strong>：</p><ul><li>Query逐步优化策略</li><li>如Query扩展、伪相关反馈等技术</li></ul></li></ol><h3 id="_3-2-生成器优化技术" tabindex="-1"><a class="header-anchor" href="#_3-2-生成器优化技术"><span>3.2 生成器优化技术</span></a></h3><h4 id="_3-2-1-prompt工程策略" tabindex="-1"><a class="header-anchor" href="#_3-2-1-prompt工程策略"><span>3.2.1 Prompt工程策略</span></a></h4><ol><li><strong>结构化Prompt模板</strong>：</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>[Instruction]: {任务指令}</span></span>
<span class="line"><span>[Context]: {检索到的相关内容}</span></span>
<span class="line"><span>[Question]: {用户输入}</span></span>
<span class="line"><span>[Answer]:</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong>动态Prompt构建</strong>： <ul><li>基于检索结果自动调整prompt结构</li><li>重要性加权和内容筛选</li></ul></li></ol><h4 id="_3-2-2-生成控制技术" tabindex="-1"><a class="header-anchor" href="#_3-2-2-生成控制技术"><span>3.2.2 生成控制技术</span></a></h4><ol><li><p><strong>约束解码(Constrained Decoding)</strong>：</p><ul><li>确保生成内容与检索结果一致</li><li>如基于有限状态机的解码方法</li></ul></li><li><p><strong>验证后处理(Verification)</strong>：</p><ul><li>对生成内容进行事实核查</li><li>可结合NLI模型或规则系统</li></ul></li></ol>`,30)]))}const p=e(r,[["render",n],["__file","rag.html.vue"]]),h=JSON.parse('{"path":"/AI/rag.html","title":"Retrieval-Augmented Generation","lang":"en-US","frontmatter":{"order":20,"shortTitle":"RAG","title":"Retrieval-Augmented Generation","description":"一、RAG技术概述 1.1 RAG的定义与发展历程 检索增强生成（Retrieval-Augmented Generation, RAG）是一种将信息检索技术与生成式语言模型相结合的新型架构。其核心思想是在文本生成过程中动态引入外部知识源的信息作为上下文参考。这一概念最早由Facebook AI Research(现Meta AI)在2020年提出[1...","head":[["meta",{"property":"og:url","content":"https://x.app/AI/rag.html"}],["meta",{"property":"og:site_name","content":"doc"}],["meta",{"property":"og:title","content":"Retrieval-Augmented Generation"}],["meta",{"property":"og:description","content":"一、RAG技术概述 1.1 RAG的定义与发展历程 检索增强生成（Retrieval-Augmented Generation, RAG）是一种将信息检索技术与生成式语言模型相结合的新型架构。其核心思想是在文本生成过程中动态引入外部知识源的信息作为上下文参考。这一概念最早由Facebook AI Research(现Meta AI)在2020年提出[1..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-05-09T15:32:25.000Z"}],["meta",{"property":"article:author","content":"ventixy"}],["meta",{"property":"article:modified_time","content":"2025-05-09T15:32:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Retrieval-Augmented Generation\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-09T15:32:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ventixy\\",\\"url\\":\\"https://www.ventix.top\\"}]}"]]},"headers":[{"level":2,"title":"一、RAG技术概述","slug":"一、rag技术概述","link":"#一、rag技术概述","children":[{"level":3,"title":"1.1 RAG的定义与发展历程","slug":"_1-1-rag的定义与发展历程","link":"#_1-1-rag的定义与发展历程","children":[]},{"level":3,"title":"1.2 RAG与传统语言模型的对比","slug":"_1-2-rag与传统语言模型的对比","link":"#_1-2-rag与传统语言模型的对比","children":[]}]},{"level":2,"title":"二、RAG核心架构与技术原理","slug":"二、rag核心架构与技术原理","link":"#二、rag核心架构与技术原理","children":[{"level":3,"title":"2.1 RAG基础架构","slug":"_2-1-rag基础架构","link":"#_2-1-rag基础架构","children":[]},{"level":3,"title":"2.2 RAG工作流程详解","slug":"_2-2-rag工作流程详解","link":"#_2-2-rag工作流程详解","children":[]},{"level":3,"title":"2.3 RAG的数学形式化表示","slug":"_2-3-rag的数学形式化表示","link":"#_2-3-rag的数学形式化表示","children":[]}]},{"level":2,"title":"三、RAG关键技术实现","slug":"三、rag关键技术实现","link":"#三、rag关键技术实现","children":[{"level":3,"title":"3.1 检索器优化技术","slug":"_3-1-检索器优化技术","link":"#_3-1-检索器优化技术","children":[]},{"level":3,"title":"3.2 生成器优化技术","slug":"_3-2-生成器优化技术","link":"#_3-2-生成器优化技术","children":[]}]}],"git":{"createdTime":1746804745000,"updatedTime":1746804745000,"contributors":[{"name":"drizzle","email":"msdrizzle@outlook.com","commits":1}]},"readingTime":{"minutes":3.49,"words":1047},"filePathRelative":"AI/rag.md","localizedDate":"May 9, 2025","excerpt":"<h2>一、RAG技术概述</h2>\\n<h3>1.1 RAG的定义与发展历程</h3>\\n<p>检索增强生成（Retrieval-Augmented Generation, RAG）是一种将信息检索技术与生成式语言模型相结合的新型架构。其核心思想是在文本生成过程中动态引入外部知识源的信息作为上下文参考。这一概念最早由Facebook AI Research(现Meta AI)在2020年提出[1]，旨在解决传统语言模型的以下局限性：</p>\\n<ul>\\n<li><strong>知识固化问题</strong>：传统语言模型的参数化知识在训练完成后即固定不变</li>\\n<li><strong>事实准确性不足</strong>：容易产生看似合理但实际错误的\\"幻觉\\"(hallucination)内容</li>\\n<li><strong>领域适应性差</strong>：难以适应特定领域的专业知识和最新信息</li>\\n</ul>","autoDesc":true}');export{p as comp,h as data};
