import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as l,o as n}from"./app-JDah0YIi.js";const e={};function t(h,i){return n(),a("div",null,i[0]||(i[0]=[l(`<p>PIL（Python Imaging Library）是一个用于图像处理的Python库，而Pillow是PIL的一个分支，可以说是PIL的现代版本。Pillow库基于PIL库进行了改进和扩展，并且在功能和性能上更优秀。</p><p>以下是Pillow的一些特色和优势：</p><ol><li><p>简单易用：Pillow库具有简单易用的API接口，使图像处理变得简单且容易上手。它提供了直观的方法和函数，可以轻松地加载、保存、编辑和处理图像。</p></li><li><p>兼容性广泛：Pillow支持多种常见的图像格式，包括JPEG、PNG、GIF、BMP、TIFF等。这意味着您可以使用Pillow来处理和转换各种图像格式，而无需依赖其他库或工具。</p></li><li><p>图像处理功能丰富：Pillow提供了广泛的图像处理功能和算法。它支持图像的调整大小、裁剪、旋转、翻转、滤镜应用、色彩空间转换等。您可以使用这些功能来进行图像增强、特效处理、数据预处理等各种图像处理任务。</p></li><li><p>与NumPy和Matplotlib的集成：Pillow与NumPy和Matplotlib等流行的科学计算和可视化库紧密集成。您可以轻松地在Pillow和这些库之间进行图像数据的转换和交互，以实现更复杂的图像处理和分析任务。</p></li></ol><h2 id="pillow快速上手" tabindex="-1"><a class="header-anchor" href="#pillow快速上手"><span>Pillow快速上手</span></a></h2><h3 id="文档和资源" tabindex="-1"><a class="header-anchor" href="#文档和资源"><span>文档和资源</span></a></h3><ul><li>Pillow官方文档地址：<a href="https://pillow.readthedocs.io/" target="_blank" rel="noopener noreferrer">https://pillow.readthedocs.io/</a></li><li>Pillow官方入门教程：<a href="https://pillow.readthedocs.io/en/stable/handbook/tutorial.html" target="_blank" rel="noopener noreferrer">Pillow tutorial</a></li></ul><p>以下是一些其他有关Pillow的常用资源网站，它们提供了额外的教程、示例代码和社区支持：</p><ol><li><p>Pillow官方GitHub仓库：<a href="https://github.com/python-pillow/Pillow" target="_blank" rel="noopener noreferrer">https://github.com/python-pillow/Pillow</a></p><ul><li>这是Pillow库的官方GitHub仓库，您可以在这里找到最新的源代码、问题追踪和贡献指南。</li></ul></li><li><p>Pillow的PyPI页面：<a href="https://pypi.org/project/Pillow/" target="_blank" rel="noopener noreferrer">https://pypi.org/project/Pillow/</a></p><ul><li>这是Pillow库在PyPI（Python Package Index）上的页面，您可以在这里查看最新版本的Pillow库，并获取安装说明和版本历史。</li></ul></li><li><p>Pillow的Stack Overflow标签：<a href="https://stackoverflow.com/questions/tagged/pillow" target="_blank" rel="noopener noreferrer">https://stackoverflow.com/questions/tagged/pillow</a></p><ul><li>Stack Overflow是一个广泛使用的问答平台，Pillow有一个专门的标签页面，您可以在这里搜索和提问与Pillow相关的问题，并查看其他人的答案和解决方案。</li></ul></li></ol><h3 id="安装和使用" tabindex="-1"><a class="header-anchor" href="#安装和使用"><span>安装和使用</span></a></h3><p>Pillow库的安装命令为</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Pillow</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://pypi.tuna.tsinghua.edu.cn/simple</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>示例代码：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> PIL</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Image</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 打开图像文件</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;image.jpg&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> image:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 显示图像</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">show</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 调整图像大小</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    resized_image </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">resize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">((</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">800</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">600</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 保存图像</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    resized_image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">save</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;resized_image.jpg&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注意事项和建议" tabindex="-1"><a class="header-anchor" href="#注意事项和建议"><span>注意事项和建议</span></a></h3><p>在使用Pillow库进行图像处理时，以下是一些注意事项和建议，以确保您的操作顺利进行：</p><ol><li><p>安装Pillow库：在开始使用Pillow之前，确保已正确安装Pillow库。您可以使用<code>pip install Pillow</code>命令来安装最新版本的Pillow库。</p></li><li><p>图像格式支持：Pillow库支持多种图像格式，但并非所有格式的特性都得到完全支持。在处理图像时，确保您使用的图像格式是Pillow库所支持的，并且了解特定格式的限制和兼容性问题。</p></li><li><p>图像模式和通道顺序：Pillow库支持不同的图像模式（如RGB、灰度等），并且可以在不同的模式之间进行转换。在处理图像时，确保选择正确的图像模式，并了解每种模式的特点和适用场景。</p></li><li><p>使用上下文管理器：在使用Pillow库打开和处理图像文件时，建议使用上下文管理器（<code>with</code>语句），以确保在处理完成后及时关闭文件句柄，避免资源泄漏。</p></li><li><p>注意图像尺寸和内存占用：大尺寸的图像可能会占用大量内存，特别是在进行像素级操作时。在处理大图像时，务必注意内存使用情况，并考虑采取适当的优化措施，如分块处理或缩小图像尺寸。</p></li><li><p>处理图像时的数据类型转换：Pillow库中的一些函数和方法可能会返回不同的数据类型，如PIL Image对象或NumPy数组。在进行连续的图像处理操作时，注意数据类型之间的转换，以便正确地使用相应的函数和方法。</p></li><li><p>图像保存质量设置：在保存图像时，注意保存质量设置。对于压缩格式（如JPEG），可以通过调整保存质量参数来控制图像的压缩比例和输出文件大小。</p></li><li><p>错误处理和异常处理：在处理图像时，特别是在读取和保存图像文件时，应考虑错误处理和异常处理。确保适当地处理可能发生的错误或异常情况，并提供适当的错误消息和反馈。</p></li></ol><div class="hint-container caution"><p class="hint-container-title">图像格式和颜色模式注意事项</p><p>当使用Pillow库打开JPEG（.jpg）和PNG（.png）图像时，默认情况下它们都被解释为RGB（红、绿、蓝）模式的格式。</p><ul><li><p>对于JPEG图像，它们通常是彩色图像，由红、绿、蓝三个颜色通道组成，因此默认被解释为RGB模式。无论图像原始的颜色模式是什么，Pillow库都将其转换为RGB模式。</p></li><li><p>对于PNG图像，它们可以是灰度图像、彩色图像或带透明度的RGBA图像。当打开PNG图像时，Pillow库会根据图像的颜色通道信息来确定颜色模式。如果图像只有一个颜色通道，则被解释为灰度模式（L），如果有三个通道，则被解释为RGB模式。<br> 如果使用Pillow库打开一个带透明度的RGBA图像，默认的PIL Image对象将是RGBA模式。</p></li></ul><p>当使用Pillow的<code>open()</code>函数打开一个带透明度的RGBA图像时，返回的PIL Image对象将保留图像的透明度通道，并将其作为第四个通道。这意味着PIL Image对象的模式将是RGBA（红、绿、蓝、透明度），其中包含RGB通道和透明度通道。</p><p>可以通过查看PIL Image对象的<code>mode</code>属性来确认其颜色模式。如果是RGBA模式，<code>mode</code>属性的值将为&#39;RGBA&#39;。示例如下：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> PIL</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Image</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 打开带透明度的RGBA图像</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;rgba_image.jpg&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> image:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 检查图像的模式</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(image.mode)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 输出：RGBA</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="通道和颜色模式" tabindex="-1"><a class="header-anchor" href="#通道和颜色模式"><span>通道和颜色模式</span></a></h3><p>在Pillow库中，图像对象（PIL Image对象）包含了图像的数据和元数据，其中包括数据格式、通道和颜色模式等。下面对这些概念进行详解：</p><ol><li><p>数据格式（Data Format）：</p><ul><li>图像对象中的数据格式指的是图像数据的组织方式和表示形式。<mark>在Pillow中，图像数据以二维数组或三维数组的形式存在，通常是基于NumPy数组存储的</mark>。</li><li>对于彩色图像，常见的数据格式是三维数组，其中每个元素代表一个像素点，包含红、绿、蓝三个通道的像素值。对于灰度图像，常见的数据格式是二维数组，每个元素代表一个像素点的灰度值。</li><li>Pillow支持不同的数据类型，包括整数类型（如uint8）和浮点类型（如float32），可以根据需求进行选择和转换。</li></ul></li><li><p>通道（Channels）：</p><ul><li>在彩色图像中，通道指的是组成图像的不同颜色信息。常见的彩色图像通道是红色（R）、绿色（G）和蓝色（B）通道，通常使用RGB颜色模式。</li><li>对于每个像素点，通道值表示了该像素在红、绿、蓝颜色分量上的强度或亮度。</li><li>除了RGB模式，Pillow还支持其他一些颜色模式，如灰度模式（L）和索引模式（P）等，每种颜色模式对应不同的通道表示方式。</li></ul></li><li><p>颜色模式（Color Mode）：</p><ul><li>颜色模式指的是图像中使用的颜色表示方式。在Pillow中，不同的颜色模式可以决定图像的通道数和数据存储方式。</li><li>常见的颜色模式包括： <ul><li>RGB（红、绿、蓝）：每个像素由三个通道（红、绿、蓝）组成，表示彩色图像。</li><li>RGBA（红、绿、蓝、透明度）：每个像素由四个通道（红、绿、蓝、透明度）组成，表示具有透明度信息的彩色图像。</li><li>L（灰度）：每个像素只有一个通道，表示灰度图像。</li><li>P（索引）：每个像素由一个索引值表示，根据调色板（Palette）中的映射关系确定实际颜色，适用于有限颜色集的图像。</li></ul></li><li>Pillow还支持其他颜色模式，如CMYK（青、洋红、黄、黑）和YCbCr等，用于特定的图像处理需求。</li></ul></li></ol><p><mark>在Pillow库中，默认的颜色模式是<code>RGB（红、绿、蓝）</code>模式，默认的通道顺序是<code>红色（R）、绿色（G）、蓝色（B）</code></mark>。</p><p>下面是使用代码示例说明常见颜色模式和通道之间的转换：</p><ol><li>默认颜色模式和通道的转换示例：</li></ol><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> PIL</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Image</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 打开图像，默认使用RGB颜色模式, 通道顺序为：R、G、B</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">image </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;image.jpg&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 转换为灰度图像</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">gray_image </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">convert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;L&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 转换为带透明度的RGBA图像</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">rgba_image </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">convert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;RGBA&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 转换为只有红色通道的图像</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">red_channel </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> rgba_image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">split</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 保存为PNG格式的RGBA图像</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">save</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;saved_rgba_image.png&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 保存为JPEG格式的灰度图像</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">gray_image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">save</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;gray_image.jpg&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 保存为PNG格式的灰度图像</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">gray_image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">save</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;gray_image.png&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>RGBA模式的代码示例：</li></ol><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> PIL</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Image</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 打开带透明度的RGBA图像</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">image </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;rgba_image.png&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 转换为RGB图像，忽略透明度通道</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">rgb_image </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">convert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;RGB&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 获取透明度通道</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">alpha_channel </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">split</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()[</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 保存为JPEG格式的RGB图像（忽略透明度通道）</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">rgb_image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">save</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;saved_rgba_image.jpg&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>灰度模式的代码示例：</li></ol><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> PIL</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Image</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 打开灰度图像</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">image </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;gray_image.png&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 转换为RGB图像，将灰度转换为彩色</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">rgb_image </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">convert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;RGB&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过使用<code>convert()</code>方法和通道分割（<code>split()</code>）等操作，可以将图像对象在不同的颜色模式和通道之间进行转换。在进行转换时，请注意目标颜色模式和通道的适用性，并根据实际需求选择正确的转换方法。</p><h2 id="pillow常用方法" tabindex="-1"><a class="header-anchor" href="#pillow常用方法"><span>Pillow常用方法</span></a></h2><h3 id="图像的基本属性" tabindex="-1"><a class="header-anchor" href="#图像的基本属性"><span>图像的基本属性</span></a></h3><p>使用pillow打开图像至内存中后，可以通过PIL图像对象查看一些基本信息。</p><p>对应官网文档：<a href="https://pillow.readthedocs.io/en/stable/reference/Image.html#image-attributes" target="_blank" rel="noopener noreferrer">https://pillow.readthedocs.io/en/stable/reference/Image.html#image-attributes</a></p><table><thead><tr><th>属性</th><th>解释</th><th>详细解释</th></tr></thead><tbody><tr><td>filename</td><td>图像的文件名</td><td><code>image.filename</code> 返回图像对象的文件名。</td></tr><tr><td>format</td><td>图像的文件格式</td><td><code>image.format</code> 返回图像对象的文件格式。</td></tr><tr><td>mode</td><td>图像的颜色模式</td><td><code>image.mode</code> 返回图像对象的颜色模式。</td></tr><tr><td>size</td><td>图像的尺寸（宽度和高度）</td><td><code>image.size</code> 返回图像对象的尺寸，以元组形式表示。</td></tr><tr><td>width</td><td>图像的宽度</td><td><code>image.width</code> 返回图像对象的宽度。</td></tr><tr><td>height</td><td>图像的高度</td><td><code>image.height</code> 返回图像对象的高度。</td></tr><tr><td>palette</td><td>图像的调色板（仅适用于索引颜色模式）</td><td><code>image.palette</code> 返回图像对象的调色板，仅适用于索引颜色模式的图像。</td></tr><tr><td>info</td><td>图像的元信息</td><td><code>image.info</code> 返回图像对象的元信息。</td></tr><tr><td>is_animated</td><td>图像是否为动画</td><td><code>getattr(image, &#39;is_animated&#39;, False)</code> 判断图像对象是否为动画图像。</td></tr><tr><td>n_frames</td><td>图像中的帧数（仅适用于动画图像）</td><td><code>getattr(image, &#39;n_frames&#39;, 1)</code> 返回动画图像中的帧数，仅适用于动画图像。</td></tr></tbody></table><p>部分代码示例：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> PIL</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Image</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 打开图像</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;image.jpg&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> image:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 图像的文件格式</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    image_format </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> image.format</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 图像的颜色模式</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    image_mode </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> image.mode</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 图像的尺寸（宽度和高度）</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    image_size </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> image.size</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 图像的元信息</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    image_info </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> image.info</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>类似的常用的方法：</p><table><thead><tr><th>方法</th><th>解释</th><th>详细解释</th></tr></thead><tbody><tr><td>getbands()</td><td>返回图像中的颜色通道列表。</td><td><code>image.getbands()</code> 返回图像对象中的颜色通道列表。</td></tr><tr><td>getbbox()</td><td>返回图像的非零像素的边界框。</td><td><code>image.getbbox()</code> 返回一个矩形，表示图像中非零像素的边界框。</td></tr><tr><td>getpixel()</td><td>返回指定坐标位置的像素值。</td><td><code>image.getpixel((100, 100))</code> 返回图像对象指定坐标位置的像素值。</td></tr><tr><td>getchannel()</td><td>返回指定通道的图像数据。</td><td><code>image.getchannel(&#39;R&#39;)</code> 返回图像对象中红色通道的图像数据。</td></tr><tr><td>getdata()</td><td>返回图像像素的迭代器。</td><td><code>image.getdata()</code> 返回一个像素值的迭代器，按照图像的颜色模式进行迭代。</td></tr><tr><td>getextrema()</td><td>返回图像每个通道的像素值范围。</td><td><code>image.getextrema()</code> 返回一个元组，其中每个元素表示图像每个通道的像素值范围。</td></tr><tr><td>getcolors()</td><td>返回图像中颜色的计数和调色板。</td><td><code>image.getcolors()</code> 返回一个列表，其中每个元素是颜色计数和对应的颜色值。</td></tr></tbody></table><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> PIL</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Image</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 打开图像</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;image.jpg&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> image:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 获取图像中的颜色通道列表</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    bands </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">getbands</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # Calculates the bounding box of the non-zero regions in the image</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    bbox </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">getbbox</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # Returns four coordinates in the format (left, upper, right, lower)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 返回指定通道的图像数据</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    red_channel </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">getchannel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;R&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数据类型转换" tabindex="-1"><a class="header-anchor" href="#数据类型转换"><span>数据类型转换</span></a></h3><p>以下是Pillow库中PIL Image对象与NumPy数组、pywin32中的位图对象以及OpenCV的图像对象之间的转换示例：</p><ol><li><p>PIL Image对象与NumPy数组之间的转换：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> numpy </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> np</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> PIL</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Image</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># PIL Image对象转换为NumPy数组</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">pil_image </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;image.jpg&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">numpy_array </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> np.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">array</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(pil_image)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># NumPy数组转换为PIL Image对象</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">pil_image </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">fromarray</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(numpy_array)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>PIL Image对象与pywin32中的位图对象之间的转换：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> win32gui</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> win32ui</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> PIL</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Image</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># PIL Image对象转换为pywin32位图对象</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">pil_image </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;image.jpg&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">width, height </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> pil_image.size</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">dc </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> win32gui.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">GetDC</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">bmp </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> win32ui.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">CreateBitmap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">bmp.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">CreateCompatibleBitmap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(dc, width, height)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">mem_dc </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> dc.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">CreateCompatibleDC</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">mem_dc.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">SelectObject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(bmp)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">mem_dc.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">BitBlt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">((</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">), (width, height), dc, (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">), win32con.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">SRCCOPY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">bmp.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">SaveBitmap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;bitmap.bmp&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># pywin32位图对象转换为PIL Image对象</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">win_bitmap </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> win32ui.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">CreateBitmap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">win_bitmap.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">LoadBitmap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;bitmap.bmp&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">pil_image </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">frombuffer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;RGB&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, (width, height), win_bitmap.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">GetBitmapBits</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;raw&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;BGRX&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>PIL Image对象与OpenCV的图像对象之间的转换：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> cv2</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> PIL</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Image</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># PIL Image对象转换为OpenCV图像对象</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">pil_image </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;image.jpg&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">opencv_image </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> cv2.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">cvtColor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(np.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">array</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(pil_image), cv2.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">COLOR_RGB2BGR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># OpenCV图像对象转换为PIL Image对象</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">pil_image </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">fromarray</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(cv2.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">cvtColor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(opencv_image, cv2.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">COLOR_BGR2RGB</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>请注意，在进行数据类型转换时，确保数据格式和通道顺序正确，以避免出现颜色失真或数据不一致的问题。同时，还应注意图像大小、数据类型和颜色模式的匹配。</p><h3 id="图像的裁剪" tabindex="-1"><a class="header-anchor" href="#图像的裁剪"><span>图像的裁剪</span></a></h3><p><code>Image.crop()</code> 方法用于裁剪图像，可以从原始图像中提取出感兴趣的区域。该方法接受一个表示裁剪区域的矩形框作为参数，并返回一个新的图像对象，该图像对象包含了裁剪后的区域。</p><p>详细解释：</p><ul><li><code>Image.crop(box)</code> 方法接受一个表示裁剪区域的矩形框 <code>box</code> 作为参数，其中 <code>box</code> 是一个元组 <code>(left, upper, right, lower)</code>，分别表示左上角和右下角的坐标。</li><li>通过指定裁剪区域的坐标，<code>Image.crop()</code> 方法会返回一个新的图像对象，该对象包含了裁剪后的图像区域。</li><li>注意，裁剪区域的坐标必须在原始图像的尺寸范围内，否则会抛出异常。</li></ul><p>代码示例：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> PIL</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Image</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 打开图像并进行裁剪</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;image.jpg&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> image:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 定义裁剪区域</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    box </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">300</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">300</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 左上角坐标为 (100, 100)，右下角坐标为 (300, 300)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 进行裁剪</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    cropped_image </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">crop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(box)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 显示裁剪后的图像</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    cropped_image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">show</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">Image.crop()注意事项</p><p>在 Pillow 中，<code>Image.crop()</code> 方法返回的是一个新的图像对象，而不是原始图像的视图对象或引用。因此，裁剪后的图像对象是原始图像的副本，而不是视图或内存共享。</p><p>当调用 <code>Image.crop()</code> 方法时，它会创建一个新的图像对象，并将裁剪后的图像数据复制到新的图像对象中。这意味着裁剪后的图像对象是独立的，对其进行修改不会影响原始图像对象。</p><p>这种复制行为确保了裁剪后的图像对象与原始图像对象之间的数据隔离，因此您可以对裁剪后的图像对象进行任何操作，而不会影响原始图像对象。</p></div><h3 id="调整图像尺寸" tabindex="-1"><a class="header-anchor" href="#调整图像尺寸"><span>调整图像尺寸</span></a></h3><p><code>Image.resize()</code> 方法用于调整图像的尺寸大小。它可以将图像调整为指定的尺寸，可以是固定的宽度和高度，或者是按比例缩放。</p><p>详细解释：</p><ul><li><code>Image.resize(size, resample=None)</code> 方法接受一个表示目标尺寸的元组 <code>size</code> 作为参数，其中 <code>size</code> 是一个包含宽度和高度的二元组。</li><li>可选参数 <code>resample</code> 指定了调整尺寸时使用的重采样方法，默认为 <code>None</code>，表示使用默认的重采样方法。</li><li>调整尺寸后，<code>Image.resize()</code> 方法会返回一个新的图像对象，该对象具有新的尺寸。</li></ul><p>代码示例：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> PIL</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Image</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 打开图像并进行尺寸调整</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;image.jpg&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> image:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 定义目标尺寸</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    new_size </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">800</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">600</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 新的宽度和高度</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 进行尺寸调整</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    resized_image </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">resize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(new_size)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 显示调整后的图像</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    resized_image.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">show</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,56)]))}const d=s(e,[["render",t],["__file","pillow.html.vue"]]),r=JSON.parse('{"path":"/python/Project/image/pillow.html","title":"Pillow图像处理","lang":"en-US","frontmatter":{"order":5,"title":"Pillow图像处理","icon":"geometry","description":"PIL（Python Imaging Library）是一个用于图像处理的Python库，而Pillow是PIL的一个分支，可以说是PIL的现代版本。Pillow库基于PIL库进行了改进和扩展，并且在功能和性能上更优秀。 以下是Pillow的一些特色和优势： 简单易用：Pillow库具有简单易用的API接口，使图像处理变得简单且容易上手。它提供了直观的...","head":[["meta",{"property":"og:url","content":"https://x.app/python/Project/image/pillow.html"}],["meta",{"property":"og:site_name","content":"doc"}],["meta",{"property":"og:title","content":"Pillow图像处理"}],["meta",{"property":"og:description","content":"PIL（Python Imaging Library）是一个用于图像处理的Python库，而Pillow是PIL的一个分支，可以说是PIL的现代版本。Pillow库基于PIL库进行了改进和扩展，并且在功能和性能上更优秀。 以下是Pillow的一些特色和优势： 简单易用：Pillow库具有简单易用的API接口，使图像处理变得简单且容易上手。它提供了直观的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-01-10T15:19:41.000Z"}],["meta",{"property":"article:author","content":"ventixy"}],["meta",{"property":"article:modified_time","content":"2025-01-10T15:19:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Pillow图像处理\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-10T15:19:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ventixy\\",\\"url\\":\\"https://www.ventix.top\\"}]}"]]},"headers":[{"level":2,"title":"Pillow快速上手","slug":"pillow快速上手","link":"#pillow快速上手","children":[{"level":3,"title":"文档和资源","slug":"文档和资源","link":"#文档和资源","children":[]},{"level":3,"title":"安装和使用","slug":"安装和使用","link":"#安装和使用","children":[]},{"level":3,"title":"注意事项和建议","slug":"注意事项和建议","link":"#注意事项和建议","children":[]},{"level":3,"title":"通道和颜色模式","slug":"通道和颜色模式","link":"#通道和颜色模式","children":[]}]},{"level":2,"title":"Pillow常用方法","slug":"pillow常用方法","link":"#pillow常用方法","children":[{"level":3,"title":"图像的基本属性","slug":"图像的基本属性","link":"#图像的基本属性","children":[]},{"level":3,"title":"数据类型转换","slug":"数据类型转换","link":"#数据类型转换","children":[]},{"level":3,"title":"图像的裁剪","slug":"图像的裁剪","link":"#图像的裁剪","children":[]},{"level":3,"title":"调整图像尺寸","slug":"调整图像尺寸","link":"#调整图像尺寸","children":[]}]}],"git":{"createdTime":1736522381000,"updatedTime":1736522381000,"contributors":[{"name":"drizzle","email":"msdrizzle@outlook.com","commits":1}]},"readingTime":{"minutes":14.26,"words":4278},"filePathRelative":"python/Project/image/pillow.md","localizedDate":"January 10, 2025","excerpt":"<p>PIL（Python Imaging Library）是一个用于图像处理的Python库，而Pillow是PIL的一个分支，可以说是PIL的现代版本。Pillow库基于PIL库进行了改进和扩展，并且在功能和性能上更优秀。</p>\\n<p>以下是Pillow的一些特色和优势：</p>\\n<ol>\\n<li>\\n<p>简单易用：Pillow库具有简单易用的API接口，使图像处理变得简单且容易上手。它提供了直观的方法和函数，可以轻松地加载、保存、编辑和处理图像。</p>\\n</li>\\n<li>\\n<p>兼容性广泛：Pillow支持多种常见的图像格式，包括JPEG、PNG、GIF、BMP、TIFF等。这意味着您可以使用Pillow来处理和转换各种图像格式，而无需依赖其他库或工具。</p>\\n</li>\\n<li>\\n<p>图像处理功能丰富：Pillow提供了广泛的图像处理功能和算法。它支持图像的调整大小、裁剪、旋转、翻转、滤镜应用、色彩空间转换等。您可以使用这些功能来进行图像增强、特效处理、数据预处理等各种图像处理任务。</p>\\n</li>\\n<li>\\n<p>与NumPy和Matplotlib的集成：Pillow与NumPy和Matplotlib等流行的科学计算和可视化库紧密集成。您可以轻松地在Pillow和这些库之间进行图像数据的转换和交互，以实现更复杂的图像处理和分析任务。</p>\\n</li>\\n</ol>","autoDesc":true}');export{d as comp,r as data};
