import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,d as e,b as g,w as n,r as p,o as h,a as t,e as s}from"./app-C-yJBuu6.js";const c={};function A(u,i){const o=p("Tabs");return h(),d("div",null,[i[8]||(i[8]=e('<p>网络接口层（Network Interface Layer）：对应于OSI模型的物理层（Physical Layer）和数据链路层（Data Link Layer），负责处理硬件细节和物理传输</p><hr><h2 id="物理层-physical" tabindex="-1"><a class="header-anchor" href="#物理层-physical"><span>物理层(Physical)</span></a></h2><p>物理层是 OSI 模型的最底层，负责在物理介质上传输原始的比特流（0 和 1）。它的主要任务是将数据从发送端传输到接收端，而不关心数据的含义或结构。</p><h3 id="常见传输介质" tabindex="-1"><a class="header-anchor" href="#常见传输介质"><span>常见传输介质</span></a></h3><p>在网络物理层，数据通过不同的传输介质进行传播，其中最常用的两种是光纤和网线（双绞线）</p><p><mark><strong>光纤（Fiber Optic）</strong></mark> 利用光脉冲在玻璃或塑料纤维中传输数据。由于光信号的频率远高于电信号，因此光纤能够支持非常高的带宽（几Gbps到几百Tbps）和长距离的数据传输，同时具有较低的信号衰减和干扰。</p><p><mark><strong>网线（Twisted Pair Cable）</strong></mark> 指的是双绞线电缆，它由一对或多对相互缠绕的导线组成，用于减少电磁干扰和串扰。根据屏蔽与否，分为非屏蔽双绞线（UTP）和屏蔽双绞线（STP）。</p><table><thead><tr><th>类型</th><th>描述</th><th>最大传输速率</th><th>最大有效距离</th></tr></thead><tbody><tr><td>Cat 5</td><td>非屏蔽双绞线，支持10/100 Mbps以太网</td><td>100 Mbps</td><td>100 米</td></tr><tr><td>Cat 5e</td><td>增强版Cat 5，改进了串扰性能，支持千兆以太网</td><td>1 Gbps</td><td>100 米</td></tr><tr><td>Cat 6</td><td>提供更好的屏蔽效果，支持千兆以太网，可支持10Gbps但限于55米内</td><td>1 Gbps (通常), 10 Gbps (短距离)</td><td>100 米 (1 Gbps), 55 米 (10 Gbps)</td></tr><tr><td>Cat 6a</td><td>改进版Cat 6，完全支持10Gbps以太网</td><td>10 Gbps</td><td>100 米</td></tr><tr><td>Cat 7</td><td>全屏蔽设计，支持高达10Gbps的传输速率</td><td>10 Gbps</td><td>100 米</td></tr><tr><td>Cat 8</td><td>最新型号，专为数据中心设计，支持高达40Gbps的传输速率</td><td>25 Gbps 至 40 Gbps</td><td>30 米</td></tr></tbody></table><hr><h3 id="网络通信方式" tabindex="-1"><a class="header-anchor" href="#网络通信方式"><span>网络通信方式</span></a></h3><p><strong>1. 单工通信（Simplex）</strong>：通信是<strong>单向</strong>的，数据只能从发送端传输到接收端，接收端无法向发送端发送数据。</p><ul><li><strong>特点</strong>： 发送方和接收方的角色固定，不能互换。适用于<strong>广播类、控制类</strong>应用场景。</li><li><strong>例子</strong>： 电视广播（TV 传输） 无线电广播（AM/FM 收音机） 电子公告牌（只显示信息，不接受输入）</li></ul><p><strong>2. 半双工通信（Half-Duplex）</strong></p><ul><li><strong>定义</strong>：数据可以在<strong>两个方向传输</strong>，但<strong>同一时间只能有一个方向的数据传输</strong>。</li><li><strong>特点</strong>： 设备可以既是发送方又是接收方，但不能同时进行双向通信。 需要控制发送权（如使用 CSMA/CD 协议）。</li><li><strong>例子</strong>： 对讲机（Walkie-Talkie）：一方讲话时，另一方必须等待对方讲话完毕后才能回复。</li></ul><p><strong>3. 全双工通信（Full-Duplex）</strong>：数据可以在<strong>两个方向同时传输</strong>，发送端和接收端可以同时发送和接收数据。</p><ul><li><strong>特点</strong>： 需要双向通道，通常采用两个独立的信道（物理或逻辑）。</li><li><strong>例子</strong>： <strong>电话通信</strong>（两个人可以同时讲话）, <strong>现代以太网（Full-Duplex Ethernet）</strong>, <strong>光纤通信</strong>, <strong>5G 移动通信</strong></li></ul><hr><h3 id="带通调制" tabindex="-1"><a class="header-anchor" href="#带通调制"><span>带通调制</span></a></h3><p>在计算机网络和通信系统中，信号可以分为 <strong>数字信号（Digital Signal）</strong> 和 <strong>模拟信号（Analog Signal）</strong>。由于物理信道通常是模拟的，计算机网络需要采用 <mark><strong>带通调制（Bandpass Modulation）</strong></mark> 来转换信号，以适应不同的传输介质。</p><table><thead><tr><th>信号类型</th><th>定义</th><th>特点</th><th>例子</th></tr></thead><tbody><tr><td><strong>数字信号</strong></td><td>离散的 0 和 1</td><td>易于存储、抗干扰能力强、易压缩</td><td>计算机数据、光纤传输</td></tr><tr><td><strong>模拟信号</strong></td><td>连续变化的电压或频率</td><td>受噪声影响较大、传输损耗高</td><td>声音、无线电波、模拟电视信号</td></tr></tbody></table><p>由于计算机网络主要采用<strong>数字信号</strong>，而大多数物理介质（如无线电、电话线路）是<strong>模拟信号</strong>，因此必须使用 <strong>调制（Modulation）</strong> 和 <strong>解调（Demodulation）</strong> 技术。</p><p><strong>1. 调制方式（数字信号 → 模拟信号）</strong>：在带通调制中，常见的数字信号调制方式包括：</p>',23)),g(o,{id:"241",data:[{id:"振幅键控(ASK)"},{id:"频移键控(FSK)"},{id:"相移键控(PSK)"},{id:"正交振幅调制(QAM)"}],active:3},{title0:n(({value:r,isActive:l})=>i[0]||(i[0]=[s("振幅键控(ASK)")])),title1:n(({value:r,isActive:l})=>i[1]||(i[1]=[s("频移键控(FSK)")])),title2:n(({value:r,isActive:l})=>i[2]||(i[2]=[s("相移键控(PSK)")])),title3:n(({value:r,isActive:l})=>i[3]||(i[3]=[s("正交振幅调制(QAM)")])),tab0:n(({value:r,isActive:l})=>i[4]||(i[4]=[t("p",null,[t("strong",null,"振幅键控（ASK, Amplitude Shift Keying）"),s("：用"),t("strong",null,"不同的振幅"),s("表示 0 和 1，例如：")],-1),t("ul",null,[t("li",null,[s("高振幅 → 代表 "),t("strong",null,"1")]),t("li",null,[s("低振幅 → 代表 "),t("strong",null,"0")]),t("li",null,[t("strong",null,"特点"),s("： 简单易实现，受噪声影响大，不适用于远距离通信")]),t("li",null,[t("strong",null,"应用"),s("： 红外遥控通信（如电视遥控器），低速无线电通信")])],-1)])),tab1:n(({value:r,isActive:l})=>i[5]||(i[5]=[t("p",null,[t("strong",null,"频移键控（FSK, Frequency Shift Keying）"),s("：用"),t("strong",null,"不同的频率"),s("表示 0 和 1，例如：")],-1),t("ul",null,[t("li",null,[s("低频率 → 代表 "),t("strong",null,"0")]),t("li",null,[s("高频率 → 代表 "),t("strong",null,"1")]),t("li",null,[t("strong",null,"特点"),s("： 比 ASK 更抗干扰， 适用于"),t("strong",null,"无线电通信")]),t("li",null,[t("strong",null,"应用"),s("：早期调制解调器（Modem），RFID（无线射频识别），蓝牙通信")])],-1)])),tab2:n(({value:r,isActive:l})=>i[6]||(i[6]=[t("p",null,[t("strong",null,"相移键控（PSK, Phase Shift Keying）"),s("：通过"),t("strong",null,"改变载波的相位"),s("来表示 0 和 1，例如：")],-1),t("ul",null,[t("li",null,[s("0° 相位 → 代表 "),t("strong",null,"0")]),t("li",null,[s("180° 相位 → 代表 "),t("strong",null,"1")]),t("li",null,[t("strong",null,"特点"),s("：抗干扰能力更强，适用于远距离通信，复杂度高")]),t("li",null,[t("strong",null,"应用"),s("：卫星通信，Wi-Fi（802.11 a/b/g/n/ac），4G/5G 移动通信")])],-1)])),tab3:n(({value:r,isActive:l})=>i[7]||(i[7]=[t("p",null,[t("strong",null,"正交振幅调制（QAM, Quadrature Amplitude Modulation）"),s("：结合"),t("strong",null,"ASK 和 PSK"),s("，同时改变信号的振幅和相位，能在同一时间传输多个比特信息。")],-1),t("ul",null,[t("li",null,[t("strong",null,"特点"),s("：具有更高的带宽效率， 广泛应用于高速数据通信")]),t("li",null,[t("strong",null,"应用"),s("： "),t("strong",null,"光纤通信"),s("， "),t("strong",null,"5G 通信（256-QAM）"),s("， "),t("strong",null,"Cable Modem（有线宽带）")])],-1)])),_:1}),i[9]||(i[9]=e(`<p><strong>2. 解调（Demodulation）</strong>: 解调是调制的逆过程，即将<strong>模拟信号转换回数字信号</strong>。<br> 例如：<strong>Modem（调制解调器）</strong> 负责将计算机的<strong>数字信号</strong>转换为电话线传输的<strong>模拟信号</strong>，然后再转换回来。</p><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>尽管<strong>计算机内部处理的是纯数字信号</strong>，但现代网络仍然需要<strong>调制解调</strong>过程，主要用于：</p><ul><li><strong>无线通信（Wi-Fi / 4G / 5G）</strong>：需要<strong>调制</strong>数据，使其适应无线电波传输。</li><li><strong>光纤通信</strong>：需要<strong>光电转换</strong>，将光信号转换成电信号。</li><li><strong>卫星通信</strong>：需要<strong>微波调制</strong>，以适应长距离传输。</li></ul></div><hr><h3 id="传输介质信号类型" tabindex="-1"><a class="header-anchor" href="#传输介质信号类型"><span>传输介质信号类型</span></a></h3><p>当前大多数网络数据以<strong>数字信号</strong>的形式存在，但在某些情况下（如无线通信、光纤通信等），数据需要转换为<strong>模拟信号</strong>来适应物理传输介质。 如 <strong>网线（以太网）直接传输电信号，不需要转换</strong>，但<strong>Wi-Fi、光纤、4G/5G 都涉及信号转换</strong>。</p><p>以下是几种常见的通信方式及其信号类型：</p><table><thead><tr><th>传输介质</th><th>传输信号</th><th>说明</th></tr></thead><tbody><tr><td><strong>光纤</strong>（Fiber）</td><td><strong>光信号</strong></td><td>采用<strong>光脉冲（激光/LED）<strong>表示 0 和 1，实际仍是</strong>数字化的光信号</strong>。</td></tr><tr><td><strong>网线</strong></td><td><strong>电信号（数字）</strong></td><td>使用电信号直接传输二进制数据，不需要额外的调制解调。</td></tr><tr><td><strong>Wi-Fi</strong></td><td><strong>无线电波（模拟）</strong></td><td>通过<strong>射频信号</strong>（如 2.4GHz、5GHz）传输数据，使用<strong>调制技术</strong>（如 QAM）将数字数据映射到无线电波上。</td></tr><tr><td><strong>手机网络（4G/5G）</strong></td><td><strong>无线电波（模拟）</strong></td><td>使用无线电信号传输，数据通过 <strong>调制（QAM/OFDM）</strong> 进行传输。</td></tr><tr><td><strong>蓝牙</strong></td><td><strong>无线电波（模拟）</strong></td><td>使用 2.4GHz <strong>ISM 频段</strong>的无线电波传输数据。</td></tr><tr><td><strong>卫星通信</strong></td><td><strong>无线电波（模拟）</strong></td><td>采用微波频段进行数据传输，需要调制技术来承载数字数据。</td></tr></tbody></table><hr><p>现代家庭网络通常由 <strong>光纤宽带 + 以太网（网线）+ Wi-Fi</strong> 组成</p><figure><img src="https://image.ventix.top/img02/20220207145759466.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>同样涉及<strong>数字信号和模拟信号的转换</strong>：</p><p><span style="color:red;"><strong>（1）光纤 → 光猫（光电转换 ONU/ONT）</strong>： <strong>解调光信号</strong>，将其恢复为计算机可识别的<strong>数字信号</strong></span></p><p><strong>（2）网线（以太网）传输</strong>： 直接使用 <strong>电信号（数字信号）</strong> 传输，不涉及调制解调，<strong>计算机、交换机、路由器</strong> 直接收发二进制数据，不需要额外的信号转换。</p><p><strong>（3）Wi-Fi 信号转换</strong>：Wi-Fi 使用<strong>无线电波（模拟信号）<strong>进行数据传输，需要</strong>数字信号和模拟信号的转换</strong>，Wi-Fi 采用 <strong>QAM（正交振幅调制）+ OFDM（正交频分复用）</strong> 技术来调制数字数据，使其适用于无线电波传输。</p><hr><h3 id="信道复用技术" tabindex="-1"><a class="header-anchor" href="#信道复用技术"><span>信道复用技术</span></a></h3><p>在计算机网络和通信系统中，<strong>信道</strong>是指用于传输信号的物理或逻辑路径。信道可以是电缆、光纤、无线电频谱等物理媒介，也可以是通过这些媒介划分出来的逻辑通道。</p><ul><li><strong>物理信道</strong>：指的是实际用于数据传输的物理介质，如双绞线、同轴电缆、光纤或无线电波等。</li><li><strong>逻辑信道</strong>：是在物理信道基础上划分出的多个虚拟信道，允许不同的数据流共享同一物理资源。</li></ul><hr><p>信道复用技术则是指在同一物理信道上同时传输多个信号的技术，以提高信道利用率和传输效率</p><ol><li><p><strong>频分多路复用（FDM, Frequency Division Multiplexing）</strong></p><ul><li><strong>原理</strong>：将整个可用频段划分为若干个独立的子频段，每个子频段分配给不同的用户或数据流使用。这样可以在同一时间在同一物理信道上传输多个信号。</li><li><strong>应用场景</strong>：传统电话系统和早期的有线电视系统常使用FDM技术来同时传输多路语音或视频信号。</li></ul></li><li><p><strong>时分多路复用（TDM, Time Division Multiplexing）</strong></p><ul><li><strong>原理</strong>：将时间分成若干个周期性的帧，每一帧再细分为多个时隙，每个时隙分配给不同的用户或数据流使用。不同用户的数据轮流占用信道的时间片进行传输。</li><li><strong>应用场景</strong>：数字通信系统如ISDN（综合业务数字网）、T1/E1线路等广泛采用TDM技术。</li></ul></li><li><p><strong>码分多址（CDMA, Code Division Multiple Access）</strong></p><ul><li><strong>原理</strong>：所有用户共享相同的频率和时间资源，但通过不同的编码序列区分各用户的信号。每个用户的数据被分配一个独特的伪随机编码序列，在接收端通过匹配滤波器恢复原始信号。</li><li><strong>应用场景</strong>：移动通信系统特别是第三代移动通信技术（3G）中广泛应用，如CDMA2000标准。</li></ul></li><li><p><span style="color:purple;"><strong>波分多路复用（WDM, Wavelength Division Multiplexing）</strong></span></p><ul><li><strong>原理</strong>：特别适用于光纤通信系统，通过在一根光纤中同时传输多个不同波长的光信号来增加容量。密集波分多路复用（DWDM）进一步增加了可传输的波长数量。</li><li><strong>应用场景</strong>：现代高速骨干网和城域网中普遍使用的高容量光纤通信解决方案。</li></ul></li><li><p><strong>空分多址（SDMA, Space Division Multiple Access）</strong></p><ul><li><strong>原理</strong>：利用天线的方向性和空间隔离特性，使不同的信号能够在同一频率和时间资源下通过不同的方向进行传输而不互相干扰。</li><li><strong>应用场景</strong>：主要用于无线通信领域，特别是在蜂窝网络基站设计中，通过智能天线阵列实现对不同方向上的用户服务。</li></ul></li></ol><p>无论是光纤、网线还是无线通信，信道复用技术都在持续演进，并根据不同的应用场景优化网络性能</p><hr><h2 id="data-link-layer" tabindex="-1"><a class="header-anchor" href="#data-link-layer"><span>Data Link Layer</span></a></h2><p>数据链路层（Data Link Layer）位于物理层之上，负责将原始的比特流组织成帧（Frame），并提供节点到节点的可靠数据传输。它的主要任务是确保数据在相邻节点之间的可靠传输。</p><p>数据链路层通常分为两个子层：</p><ol><li><strong>逻辑链路控制（LLC）子层</strong>: 提供帧的封装与解封装、错误检测、流量控制等功能。如今LLC的功能已被简化或省略。</li><li><strong>介质访问控制（MAC）子层</strong>: 负责物理地址管理和介质访问控制，是现代网络架构中的关键部分</li></ol><h3 id="封装成帧" tabindex="-1"><a class="header-anchor" href="#封装成帧"><span>封装成帧</span></a></h3><p>封装成帧（Framing）：数据链路层通过成帧（Framing） 机制，将上层（网络层）的 IP 数据包 封装成 数据帧（Frame）。数据帧 由 帧头（Header）、数据（Payload） 和 帧尾（Trailer） 组成。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">| </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">帧头（Header）</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">数据（Payload:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> IP数据包）</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   |  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">帧尾（Trailer）</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p>每一个链路层协议都规定了所能传递的帧的数据部分长度上限 ——— 最大传送单元 <code>MTU （Maximum Transfer Unit）</code></p></li><li><p>帧的首部和尾部中含有很多控制信息，它们的一个重要作用是确定帧的界限: <mark>帧定界</mark></p></li></ul><p><span style="color:red;">在数据链路层，封装成帧的过程可以使用不同的协议来实现，PPP和MAC帧是两种常见的帧格式</span></p><p>PPP 主要用于拨号上网、VPN、ADSL 等特定场景，现代互联网主流使用的是 <strong>MAC 帧（以太网帧）</strong></p><h3 id="透明传输" tabindex="-1"><a class="header-anchor" href="#透明传输"><span>透明传输</span></a></h3><p>透明传输（Transparent Transmission）：由于数据可能包含与帧定界符（如 01111110）相同的比特序列，因此需要一种方法保证帧的正确解析，而不会误认为数据本身是帧的边界。</p><p>解决方案：</p><ul><li>字节填充（Byte Stuffing）：在特殊字符前插入转义字符（ESC）。</li><li>比特填充（Bit Stuffing）：在 5 个连续 1 后面自动插入 0，防止帧边界混淆。</li></ul><h3 id="差错检测" tabindex="-1"><a class="header-anchor" href="#差错检测"><span>差错检测</span></a></h3><p>差错检测（Error Detection）：在数据链路层对数据帧进行错误检测，确保传输过程中数据未被篡改</p><p>常见技术：</p><ul><li><span style="color:red;"><strong>循环冗余校验（CRC）</strong>：以太网使用 FCS（Frame Check Sequence） 字段存储 CRC 值，用于检测数据帧是否发生错误</span></li><li>奇偶校验（Parity Check）</li><li>校验和（Checksum）</li></ul><hr><h3 id="csma-cd-协议" tabindex="-1"><a class="header-anchor" href="#csma-cd-协议"><span>CSMA/CD 协议</span></a></h3><p>CSMA/CD 协议（载波监听多路访问/碰撞检测）：CSMA/CD（Carrier Sense Multiple Access with Collision Detection） 是以太网（有线网络）中的冲突检测协议，<span style="color:red;">用于协调多个设备如何共享同一物理介质的机制，它更接近于一种协作机制而非帧格式定义</span>，旨在提高网络效率和可靠性。</p><p>CSMA/CD 包括载波监听、多路访问和冲突检测三个关键部分:</p><ul><li>载波监听（Carrier Sense）：设备发送数据前，先监听信道是否空闲。</li><li>多路访问（Multiple Access）：多个设备可共享同一信道。</li><li>冲突检测（Collision Detection）：若两个设备同时发送数据，发生冲突，设备停止发送，等待一段随机时间后重试（ <mark>退避算法 [ Backoff Algorithm ]</mark> ）</li></ul><p>通过载波监听和冲突检测，它可以最大限度地减少数据包丢失，并提高网络的整体性能。</p><p>随着全双工交换技术和更先进的网络硬件的发展，现代以太网（交换式网络）已几乎不再使用 <code>CSMA/CD</code>，因为全双工交换机能直接提供独立的信道，避免冲突。</p><hr><h3 id="点对点协议" tabindex="-1"><a class="header-anchor" href="#点对点协议"><span>点对点协议</span></a></h3><p>点对点协议（Point-to-Point Protocol, PPP）: 是一种用于点对点通信的 数据链路层协议，它提供了一种标准化的方法来封装和传输多协议数据，并支持身份验证、错误检测等功能。</p><p>PPP帧的基本结构如下：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+----------+------------+-----------+-------------+--------------+-----------+</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">| </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Flag</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">     | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Control</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Protocol</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Information</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">FCS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">       |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+----------+------------+-----------+-------------+--------------+-----------+</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">| </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">01111110</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">11111111</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">00000011</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">0x...</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">       | </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">...</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CRC</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+----------+------------+-----------+-------------+--------------+-----------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面是PPP帧格式各个字段的长度、典型值及其作用的总结：</p><table><thead><tr><th>字段名称</th><th>长度(字节)</th><th>典型值/范围</th><th>描述</th></tr></thead><tbody><tr><td><strong>Flag</strong></td><td>1</td><td><code>0x7E</code> (<code>01111110</code>)</td><td>标识PPP帧的开始和结束</td></tr><tr><td><strong>Address</strong></td><td>1</td><td><code>0xFF</code> (<code>11111111</code>)</td><td>在点对点通信中固定为全<code>1</code>，表示广播地址</td></tr><tr><td><strong>Control</strong></td><td>1</td><td><code>0x03</code> (<code>00000011</code>)</td><td>默认情况下固定为<code>0x03</code>，表示无编号帧</td></tr><tr><td><strong>Protocol</strong></td><td>2</td><td>根据协议不同而变化</td><td>标识封装的数据类型或控制信息类型</td></tr><tr><td><strong>Information</strong></td><td>可变</td><td>最大不超过MRU（最大接收单元，通常为1500字节）</td><td>上层实际数据或控制信息</td></tr><tr><td><strong>FCS</strong></td><td>2 或 4</td><td>CRC校验值</td><td>用于差错检测</td></tr></tbody></table><ul><li><strong>Flag</strong>: PPP帧的边界标识符，用来区分不同的帧。每个帧前后都有一个标志位。</li><li><strong>Address</strong>: 在点对点连接中没有实际用途，通常设置为全<code>1</code>，以保持兼容性。</li><li><strong>Control</strong>: 通常固定为<code>0x03</code>，用于表示无编号帧。如果需要进行序列号管理等则可能使用其他值</li><li><strong>Protocol</strong>: 指示PPP帧中封装的数据类型。例如，IP数据包、链路控制协议或网络控制协议等 <ul><li><code>0x0021</code>: IP数据报文</li><li><code>0xC021</code>: LCP数据，链路控制协议</li><li><code>0x8021</code>: NCP数据，网络控制协议</li></ul></li><li><strong>Information</strong>: 待传输的实际数据或者控制信息，其长度取决于所协商的最大接收单元（MRU）</li><li><strong>FCS</strong>: 帧校验序列，用于检测传输过程中的错误，一般采用CRC算法计算得出</li></ul><p>PPP协议是早期互联网接入技术的重要组成部分。主要用于 拨号连接、ADSL、VPN 等。</p><hr><h3 id="mac-地址" tabindex="-1"><a class="header-anchor" href="#mac-地址"><span>MAC 地址</span></a></h3><p>MAC 地址（Media Access Control Address）：是设备在局域网（LAN）中的唯一标识，由 <strong>48 位（6 字节）</strong> 的十六进制数表示，前 24 位（厂商标识 OUI） 和 后 24 位（设备标识 NIC） 组成</p><figure><img src="https://image.ventix.top/img02/20220207191832171.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如何查询电脑的MAC地址：</p><ul><li>Windows 命令：<code>ipconfig /all</code></li><li>Linux 命令: <code>ifconfig</code> ether后面的值</li></ul><p>如何根据MAC地址查询厂商信息：</p><ul><li>IEEE官方的OUI: <a href="https://standards-oui.ieee.org" target="_blank" rel="noopener noreferrer">IEEE OUI Public Listing</a></li><li>第三方查询网站：<a href="https://macvendors.com/" target="_blank" rel="noopener noreferrer">MACvendors</a> ，<a href="https://macaddress.io/" target="_blank" rel="noopener noreferrer">macaddress.io</a></li></ul><hr><p>MAC地址的 <strong>第一个字节</strong> 的最低位（即最右边的一位）可以用来区分单播地址和多播地址。这个位被称为“<code>I/G</code>”位，代表“<code>Individual/Group</code>”。</p><div class="hint-container info"><p class="hint-container-title">单播和多播的MAC地址</p><ul><li><p><strong>对于单播地址</strong>：I/G位设置为<code>0</code>。这意味着该MAC地址标识了一个单独的、特定的网络接口。单播帧会被发送到这个唯一的地址，并且只会被目标设备接收和处理。</p></li><li><p><strong>对于多播地址</strong>：I/G位设置为<code>1</code>。这意味着该MAC地址标识了一组设备或一组网络接口。多播帧可以被多个设备接收和处理，具体取决于它们是否配置为监听对应的多播地址。</p></li></ul><p>例如，一个典型的单播MAC地址可能是<code>00:A1:B2:C3:D4:E5</code>，这里第一个字节<code>00</code>的最低位是<code>0</code>，表示这是一个单播地址。而一个多播MAC地址可能看起来像<code>01:00:5E:00:00:01</code>，其中第一个字节<code>01</code>的最低位是<code>1</code>，这表明它是一个多播地址。</p></div><p>此外，还有一个特殊情况是广播地址，其所有位都被设置为<code>1</code>（即<code>FF:FF:FF:FF:FF:FF</code>），它可以被视为一种特殊的多播地址，因为它是针对局域网内所有设备的。</p><hr><h3 id="mac-帧" tabindex="-1"><a class="header-anchor" href="#mac-帧"><span>MAC 帧</span></a></h3><p>MAC 帧（Media Access Control Frame）是数据链路层中用于在物理介质上传输数据的基本单位</p><p>MAC 帧定义了数据如何在网络中从一个设备传输到另一个设备。使用 <code>Wireshark</code> 或其他类似的网络协议分析器查看捕获的数据包时，看到的MAC帧将直接以目的MAC地址开头，不会包含 <strong>前导码（Preamble）</strong> 和 <strong>帧开始定界符（Start Frame Delimiter, SFD）</strong></p><figure><img src="https://image.ventix.top/img02/20220207193011791.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol><li><p><strong>前导码(Preamble)</strong>: 7字节， 由交替的<code>1</code>和<code>0</code>组成，主要用于同步发送端和接收端的时钟频率，使得双方能够在正确的时刻采样信号</p></li><li><p><strong>帧开始定界符(Start Frame Delimiter, SFD)</strong>: 1字节， 值为 <code>10101011</code>，标志着帧的实际开始，与前导码一起帮助接收方识别帧的起始位置</p></li><li><p><strong>目的MAC地址(Destination MAC Address)</strong>: 6字节， 指明该帧的目标接收设备的MAC地址。根据目的 MAC 地址的不同，MAC 帧可以分为以下类型：</p><ul><li>单播帧（Unicast Frame）: 目的 MAC 地址指向单个设备。示例：<code>00:1A:2B:3C:4D:5E</code></li><li>多播帧（Multicast Frame）：目的 MAC 地址指向一组设备。示例：<code>01:00:5E:00:00:01</code></li><li>广播帧（Broadcast Frame）: 地址为全 1，指向所有设备。示例：<code>FF:FF:FF:FF:FF:FF</code></li></ul></li><li><p><strong>源MAC地址(Source MAC Address)</strong>: 6字节，标识发送该帧的设备的MAC地址。</p></li><li><p><strong>类型/长度(Type/Length)</strong>: 2字节， 在不同的以太网版本中有不同用途：</p><ul><li>如果值小于 <code>1500</code>，表示数据字段的长度（以字节为单位）</li><li>如果值大于 <code>1500</code>，表示上层协议的类型（如 <code>0x0800</code> 表示 IPv4，<code>0x86DD</code> 表示 IPv6）</li></ul></li><li><p><strong>数据和填充(Data &amp; Padding)</strong>: 46 到 1500 字节，承载上层协议（如 IP 数据包）的数据</p><ul><li>最小长度: 46 字节（如果数据不足 46 字节，需要填充）</li><li>最大长度: 1500 字节（以太网的最大传输单元，MTU）</li></ul></li><li><p><strong>帧校验序列(Frame Check Sequence, FCS)</strong>: 4字节，使用CRC（循环冗余校验）算法生成，用于差错检测，确保帧在传输过程中未被损坏</p></li></ol><p><strong>最小帧长</strong>：为了确保冲突检测的有效性，以太网帧有一个最小长度的要求，通常为64字节（包括目标地址、源地址、类型/长度和FCS等头部信息）。如果数据部分少于46字节，则需要进行填充。</p><hr><h3 id="交换机" tabindex="-1"><a class="header-anchor" href="#交换机"><span>交换机</span></a></h3><p>交换机（Switch）： 是数据链路层设备，用于在局域网（LAN）中转发数据帧。且为全双工通信（不像集线器那样需要 CSMA/CD）</p><p><span style="color:red;"><strong>交换机内部维护一个 MAC 地址表</strong></span>：CAM（Content Addressable Memory）也称为转发表，用于记录每个设备的 MAC 地址与其连接的交换机端口的映射关系。MAC 地址表的结构如下：</p><table><thead><tr><th>MAC地址</th><th>端口号</th><th>老化时间（秒）</th></tr></thead><tbody><tr><td>AA:BB:CC:DD:EE:01</td><td>1</td><td>300</td></tr><tr><td>AA:BB:CC:DD:EE:02</td><td>2</td><td>300</td></tr><tr><td>AA:BB:CC:DD:EE:03</td><td>3</td><td>300</td></tr></tbody></table><p>交换机的主要功能是根据数据帧的目的 MAC 地址，将帧从正确的端口转发出去。为了实现这一功能，交换机需要：</p><ol><li><strong>自学习</strong>：动态学习网络中设备的 MAC 地址和端口的映射关系。</li><li><strong>转发帧</strong>：根据学习到的 MAC 地址表，将帧转发到正确的端口。</li></ol><div class="hint-container important"><p class="hint-container-title">交换机的自学习流程</p><p>当交换机收到一个数据帧时，它会检查帧的 <strong>源 MAC 地址</strong>，并更新 MAC 地址表：</p><ol><li><strong>接收帧</strong>： 交换机从某个端口接收到一个数据帧。</li><li><strong>提取源 MAC 地址</strong>： 交换机从帧中提取源 MAC 地址。</li><li><strong>更新 MAC 地址表</strong>： <ul><li>交换机将源 MAC 地址和接收端口的映射关系记录到 MAC 地址表中。</li><li>如果 MAC 地址表中已经存在该地址，则更新其端口映射；如果不存在，则添加新的条目</li></ul></li><li><strong>设置超时时间</strong>： 每个 MAC 地址表条目都有一个超时时间（通常为 300 秒）。如果在该时间内没有收到该 MAC 地址的帧，则删除该条目。</li></ol><p><strong>自学习的意义</strong>：动态学习网络中设备的 MAC 地址和端口映射关系，无需手动配置，支持网络的动态变化（如设备移动或新增设备）</p></div><p>交换机根据数据帧的 <strong>目的 MAC 地址</strong> 和 MAC 地址表，决定如何转发帧。具体规则如下：</p><div class="hint-container info"><p class="hint-container-title">交换机的帧转发规则</p><ol><li><strong>已知单播帧（Known Unicast Frame）</strong>： 如果目的 MAC 地址在 MAC 地址表中，则将帧转发到对应的端口。</li><li><strong>未知单播帧（Unknown Unicast Frame）</strong>： 如果目的 MAC 地址不在 MAC 地址表中，则将帧 <mark>广播到所有端口 （泛洪，Flooding）</mark></li><li><strong>广播帧（Broadcast Frame）</strong>： 如果目的 MAC 地址是广播地址（<code>FF:FF:FF:FF:FF:FF</code>），则将帧广播到所有端口。</li><li><strong>多播帧（Multicast Frame）</strong>： 如果目的 MAC 地址是多播地址，则根据配置决定是否广播或转发到特定端口。</li></ol></div><p><strong>环路问题</strong>: 在复杂的网络拓扑中，交换机之间可能会形成环路，导致以下问题：</p><ul><li><strong>广播风暴</strong>：广播帧在环路中无限循环，占用大量带宽。</li><li><strong>MAC 地址表混乱</strong>：同一 MAC 地址可能映射到多个端口。</li></ul><div class="hint-container warning"><p class="hint-container-title">生成树协议（STP）</p><p>生成树协议（STP, Spanning Tree Protocol）: STP 是一种用于防止环路的协议，通过阻塞某些端口来消除环路，同时确保网络的连通性。STP 的工作原理如下：</p><ol><li><strong>选举根桥（Root Bridge）</strong>：网络中所有交换机通过交换 BPDU（Bridge Protocol Data Unit）选举出一个根桥。</li><li><strong>计算最短路径</strong>： 每个交换机计算到根桥的最短路径，并选择根端口（Root Port）。</li><li><strong>阻塞冗余链路</strong>：对于非最短路径的端口，交换机将其阻塞，从而消除环路。</li></ol></div><hr><h3 id="虚拟局域网" tabindex="-1"><a class="header-anchor" href="#虚拟局域网"><span>虚拟局域网</span></a></h3><p>虚拟局域网（VLAN, Virtual LAN）：VLAN 允许在同一个物理交换机上划分多个逻辑局域网，不同 VLAN 之间的设备无法直接通信。</p><ul><li>提升安全性（不同 VLAN 之间的数据隔离）</li><li>减少广播域（避免广播风暴）</li><li>提高管理灵活性（通过 802.1Q VLAN Tagging 进行 VLAN 标记）</li></ul><hr><p>局域网（LAN）：局域网用于**小范围（如家庭、公司）**的计算机网络。</p><p>以太网（Ethernet）：以太网是最广泛使用的局域网技术，使用 MAC 地址 进行设备识别。采用 以太网帧格式 和 交换机（Switch） 进行数据传输。</p><hr><h2 id="arp及rarp协议" tabindex="-1"><a class="header-anchor" href="#arp及rarp协议"><span>ARP及RARP协议</span></a></h2><p>ARP（Address Resolution Protocol）用于根据目标设备的IP地址找到其对应的MAC地址。这对于在同一局域网内的通信是必要的，因为以太网帧需要目的MAC地址来正确地发送数据包。</p><p>当一台主机想要与同一局域网内的另一台主机通信时，它首先需要知道目标主机的MAC地址。如果源主机不知道目标主机的MAC地址，则会执行以下步骤：</p><ol><li><p><strong>广播ARP请求</strong>：源主机发送一个ARP请求消息到本地网络上的所有设备。这个请求包含了源主机的IP地址和MAC地址，以及目标主机的IP地址。由于这是一个广播消息，所以局域网内的所有设备都能接收到。</p></li><li><p><strong>接收并处理ARP请求</strong>：局域网内的每台设备都会检查ARP请求中的目标IP地址是否匹配自己的IP地址。如果匹配，该设备就会回应一个ARP响应消息给源主机，其中包含了自己的MAC地址。</p></li><li><p><strong>更新ARP缓存</strong>：一旦源主机收到了正确的ARP响应，它就会将目标主机的IP地址和对应的MAC地址存储在本地的ARP缓存表中，以便将来通信时直接使用而无需再次发起ARP请求。</p></li></ol><div class="hint-container tip"><p class="hint-container-title">ARP缓存</p><p>为了提高效率，避免每次都需要进行ARP查询，操作系统通常会维护一个ARP缓存表。这个表格记录了最近发现的IP地址与MAC地址之间的映射关系。然而，由于设备可能会更换其MAC地址（例如重启后），因此ARP缓存条目通常具有一定的生存时间（TTL），过期后会被自动删除或刷新。</p></div><p>特殊情况</p><ul><li><p><strong>代理ARP</strong>：某些情况下，路由器可以代表其他主机回应ARP请求，这种方法被称为代理ARP。这使得位于不同子网但配置错误认为它们在同一子网的主机仍能相互通信。</p></li><li><p><strong>免费ARP（Gratuitous ARP）</strong>：有时设备会发送一个ARP请求，其中的目标IP地址实际上是自身IP地址。这种行为可用于检测IP地址冲突或更新网络中其他设备的ARP缓存。</p></li></ul><p>ARP协议本身并不具备认证机制，这意味着任何恶意用户都可以伪造ARP回复来误导网络中的其他设备，导致所谓的ARP欺骗攻击。为了防范此类威胁，一些网络采用了诸如静态ARP表、动态ARP检测等安全措施。</p><hr><p>RARP（Reverse Address Resolution Protocol）：RARP的功能与ARP相反，它允许物理地址已知但IP地址未知的设备请求并接收自己的IP地址。不过，由于其局限性，现在大多被更高级别的协议如BOOTP或DHCP所取代。</p>`,107))])}const C=a(c,[["render",A],["__file","interface.html.vue"]]),m=JSON.parse('{"path":"/theory/cs/interface.html","title":"网络接口层（Network Interface Layer）","lang":"en-US","frontmatter":{"order":1,"title":"网络接口层（Network Interface Layer）","shortTitle":"网络接口层","description":"网络接口层（Network Interface Layer）：对应于OSI模型的物理层（Physical Layer）和数据链路层（Data Link Layer），负责处理硬件细节和物理传输 物理层(Physical) 物理层是 OSI 模型的最底层，负责在物理介质上传输原始的比特流（0 和 1）。它的主要任务是将数据从发送端传输到接收端，而不关心数...","head":[["meta",{"property":"og:url","content":"https://x.app/theory/cs/interface.html"}],["meta",{"property":"og:site_name","content":"doc"}],["meta",{"property":"og:title","content":"网络接口层（Network Interface Layer）"}],["meta",{"property":"og:description","content":"网络接口层（Network Interface Layer）：对应于OSI模型的物理层（Physical Layer）和数据链路层（Data Link Layer），负责处理硬件细节和物理传输 物理层(Physical) 物理层是 OSI 模型的最底层，负责在物理介质上传输原始的比特流（0 和 1）。它的主要任务是将数据从发送端传输到接收端，而不关心数..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://image.ventix.top/img02/20220207145759466.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-02-12T09:46:27.000Z"}],["meta",{"property":"article:author","content":"ventixy"}],["meta",{"property":"article:modified_time","content":"2025-02-12T09:46:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"网络接口层（Network Interface Layer）\\",\\"image\\":[\\"https://image.ventix.top/img02/20220207145759466.png\\",\\"https://image.ventix.top/img02/20220207191832171.png\\",\\"https://image.ventix.top/img02/20220207193011791.png\\"],\\"dateModified\\":\\"2025-02-12T09:46:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ventixy\\",\\"url\\":\\"https://www.ventix.top\\"}]}"]]},"headers":[{"level":2,"title":"物理层(Physical)","slug":"物理层-physical","link":"#物理层-physical","children":[{"level":3,"title":"常见传输介质","slug":"常见传输介质","link":"#常见传输介质","children":[]},{"level":3,"title":"网络通信方式","slug":"网络通信方式","link":"#网络通信方式","children":[]},{"level":3,"title":"带通调制","slug":"带通调制","link":"#带通调制","children":[]},{"level":3,"title":"传输介质信号类型","slug":"传输介质信号类型","link":"#传输介质信号类型","children":[]},{"level":3,"title":"信道复用技术","slug":"信道复用技术","link":"#信道复用技术","children":[]}]},{"level":2,"title":"Data Link Layer","slug":"data-link-layer","link":"#data-link-layer","children":[{"level":3,"title":"封装成帧","slug":"封装成帧","link":"#封装成帧","children":[]},{"level":3,"title":"透明传输","slug":"透明传输","link":"#透明传输","children":[]},{"level":3,"title":"差错检测","slug":"差错检测","link":"#差错检测","children":[]},{"level":3,"title":"CSMA/CD 协议","slug":"csma-cd-协议","link":"#csma-cd-协议","children":[]},{"level":3,"title":"点对点协议","slug":"点对点协议","link":"#点对点协议","children":[]},{"level":3,"title":"MAC 地址","slug":"mac-地址","link":"#mac-地址","children":[]},{"level":3,"title":"MAC 帧","slug":"mac-帧","link":"#mac-帧","children":[]},{"level":3,"title":"交换机","slug":"交换机","link":"#交换机","children":[]},{"level":3,"title":"虚拟局域网","slug":"虚拟局域网","link":"#虚拟局域网","children":[]}]},{"level":2,"title":"ARP及RARP协议","slug":"arp及rarp协议","link":"#arp及rarp协议","children":[]}],"git":{"createdTime":1738853005000,"updatedTime":1739353587000,"contributors":[{"name":"drizzle","email":"msdrizzle@outlook.com","commits":3}]},"readingTime":{"minutes":23.75,"words":7124},"filePathRelative":"theory/cs/interface.md","localizedDate":"February 6, 2025","excerpt":"<p>网络接口层（Network Interface Layer）：对应于OSI模型的物理层（Physical Layer）和数据链路层（Data Link Layer），负责处理硬件细节和物理传输</p>\\n<hr>\\n<h2>物理层(Physical)</h2>\\n<p>物理层是 OSI 模型的最底层，负责在物理介质上传输原始的比特流（0 和 1）。它的主要任务是将数据从发送端传输到接收端，而不关心数据的含义或结构。</p>\\n<h3>常见传输介质</h3>\\n<p>在网络物理层，数据通过不同的传输介质进行传播，其中最常用的两种是光纤和网线（双绞线）</p>\\n<p><mark><strong>光纤（Fiber Optic）</strong></mark> 利用光脉冲在玻璃或塑料纤维中传输数据。由于光信号的频率远高于电信号，因此光纤能够支持非常高的带宽（几Gbps到几百Tbps）和长距离的数据传输，同时具有较低的信号衰减和干扰。</p>","autoDesc":true}');export{C as comp,m as data};
