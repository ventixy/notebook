import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as k,b as h,e as d,a as i,w as e,r as p,o as g,d as s}from"./app-BptLyOzL.js";const c={};function o(b,a){const t=p("Tabs");return g(),k("div",null,[a[20]||(a[20]=h('<details class="hint-container details"><summary>SVN 和 Git的本质区别</summary><p>SVN 和 Git 遵循不同的设计哲学，这些设计哲学导致了它们在使用和性能上的显著差异：</p><h4 id="设计哲学" tabindex="-1"><a class="header-anchor" href="#设计哲学"><span>设计哲学</span></a></h4><ol><li><p><strong>SVN（Subversion）</strong>：</p><ul><li><strong>基于差异（diff）</strong>：SVN 跟踪文件的变化，每次提交记录的是相对于前一个版本的差异（diff）。这种设计使得存储空间相对较小，因为每个版本只存储增量信息。</li><li><strong>集中式版本控制系统</strong>：SVN 使用一个中央仓库来管理所有版本控制的数据，客户端通过网络连接到这个中央仓库进行操作。</li></ul></li><li><p><strong>Git</strong>：</p><ul><li><strong>基于快照</strong>：Git 在每次提交中记录文件的完整内容（快照）。这种设计使得每个版本都是独立的，不需要通过版本间的差异组装得到。</li><li><strong>分布式版本控制系统</strong>：Git 每个克隆的仓库都是一个完整的副本，包含所有历史记录，这使得离线操作成为可能。</li></ul></li></ol><h4 id="存储和性能" tabindex="-1"><a class="header-anchor" href="#存储和性能"><span>存储和性能</span></a></h4><ol><li><p><strong>存储空间</strong>：</p><ul><li><strong>SVN</strong>：由于记录的是差异，SVN 的存储空间通常比 Git 小。每次提交只存储文件的增量信息，减少了冗余。</li><li><strong>Git</strong>：由于记录的是快照，Git 的存储空间通常比 SVN 大。每次提交都存储文件的完整内容，但 Git 使用了一些优化技术（如压缩和打包）来减少存储空间的需求。</li></ul></li><li><p><strong>性能</strong>：</p><ul><li><strong>SVN</strong>：由于需要通过版本间的差异组装文件，SVN 的某些操作（如查看某个版本的文件内容）可能相对较慢。</li><li><strong>Git</strong>：由于每个版本都是独立的快照，Git 的许多操作（如查看某个版本的文件内容、切换分支等）可以非常快速地完成，因为可以直接从数据库中获取完整的文件内容。</li></ul></li></ol><h4 id="优化技术" tabindex="-1"><a class="header-anchor" href="#优化技术"><span>优化技术</span></a></h4><p>尽管 Git 记录的是快照，但它使用了一些优化技术来减少存储空间的需求：</p><ul><li><strong>压缩</strong>：Git 会定期对对象进行压缩，生成 pack 文件，从而减少存储空间。</li><li><strong>垃圾回收</strong>：Git 会定期清理不再需要的对象，进一步优化存储空间。</li><li><strong>Delta 编码</strong>：在打包文件时，Git 也会使用 Delta 编码来减少冗余数据。</li></ul><h4 id="实际对比" tabindex="-1"><a class="header-anchor" href="#实际对比"><span>实际对比</span></a></h4><ul><li><strong>存储空间</strong>：虽然 Git 记录的是快照，但由于优化技术，Git 的实际存储空间需求通常并不会比 SVN 大很多，尤其是在大型项目中。</li><li><strong>性能</strong>：Git 的操作速度通常比 SVN 快，尤其是对于离线操作和复杂的历史记录查询。</li></ul><p>总结:</p><ul><li><strong>SVN</strong>：基于差异的版本控制，存储空间较小，但某些操作可能较慢。</li><li><strong>Git</strong>：基于快照的版本控制，存储空间可能稍大，但操作速度快，支持分布式协作。</li></ul><p>Git 通过记录快照来换取更快的操作速度，但通过优化技术，其实际存储空间需求并不会显著高于 SVN。这种设计使得 Git 在现代软件开发中非常受欢迎，特别是在需要频繁分支和合并的场景中。</p></details><h2 id="git基础命令使用" tabindex="-1"><a class="header-anchor" href="#git基础命令使用"><span>Git基础命令使用</span></a></h2><p>learn git branching: <a href="https://learngitbranching.js.org/" target="_blank" rel="noopener noreferrer">https://learngitbranching.js.org/</a></p><figure><img src="https://image.ventix.top/img01/202101101709051.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Git教程-GitHub：<a href="https://github.com/geeeeeeeeek/git-recipes" target="_blank" rel="noopener noreferrer">https://github.com/geeeeeeeeek/git-recipes</a></p><h3 id="安装和配置" tabindex="-1"><a class="header-anchor" href="#安装和配置"><span>安装和配置</span></a></h3><p>Git官网：<a href="https://git-scm.com" target="_blank" rel="noopener noreferrer">https://git-scm.com</a></p><p>Windows下载地址：<a href="https://git-scm.com/download/win" target="_blank" rel="noopener noreferrer">https://git-scm.com/download/win</a></p>',8)),d(t,{id:"160",data:[{id:"Linux"},{id:"Windows"},{id:"MacOS"}],active:0},{title0:e(({value:l,isActive:n})=>a[0]||(a[0]=[s("Linux")])),title1:e(({value:l,isActive:n})=>a[1]||(a[1]=[s("Windows")])),title2:e(({value:l,isActive:n})=>a[2]||(a[2]=[s("MacOS")])),tab0:e(({value:l,isActive:n})=>a[3]||(a[3]=[i("p",null,"Linux 用户(以Ubuntu为例) :",-1),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," apt-get"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," install"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," git")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1)])),tab1:e(({value:l,isActive:n})=>a[4]||(a[4]=[i("p",null,"直接下载安装即可",-1)])),tab2:e(({value:l,isActive:n})=>a[5]||(a[5]=[i("p",null,"Mac 用户：Xcode Command Line Tools 自带 Git",-1),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"xcode-select"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --install")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1)])),_:1}),a[21]||(a[21]=h(`<p><strong>【Git配置】</strong>: 在使用 git 前，需要告诉 git 你是谁，在向 git 仓库中提交时需要用到。全局配置：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> user.name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 提交人姓名</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 1. 配置提交人姓名</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> user.email</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 提交人邮箱</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 2. 配置提交人姓名</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --list</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                        # 3. 查看git配置信息</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">SSH配置</p><p>生成秘钥：<code>ssh-keygen</code> (秘钥存储目录：<code>C:\\Users\\用户\\\\.ssh</code>)</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#进入git bash , 使用如下命令，连续三次回车</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ssh-keygen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rsa</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -C</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;msdrizzle@outlook.com&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#查看公钥 (然后登录Gitee/Github,在设置中找到SSHKEY将id_rsa.pub文件的内容复制进去即可)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/.ssh/id_rsa.pub</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>公钥文件名：<code>id_rsa.pub</code>, 私钥文件名：<code>id_rsa</code></p></div><details class="hint-container details"><summary>管理多个Github账号的SSH密钥</summary><p>同一个SSH密钥只能关联一个Github账号，如果需要在一台电脑上同时使用两个Gihub的仓库，需要配置不同的SSH密钥</p><p>生成第二个SSH密钥：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ssh-keygen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rsa</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -b</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4096</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -C</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;xxxxx@163.com&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>根据提示输入SSH密钥文件地址, 如: <code> C:\\Users\\admin/.ssh/id_rsa2.pub</code></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>cat ~/.ssh/id_rsa2.pub</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>配置第二个账号的SSH密钥</p><p>最后需要添加新SSH密钥到SSH代理：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> eval</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;$(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ssh-agent</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">)&quot;ssh-add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/.ssh/id_rsa2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>并在 <code>~/.ssh/config</code> 文件中添加如下配置：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 默认GitHub账户</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Host</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  HostName</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  User</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  IdentityFile</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/.ssh/id_rsa</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 第二个GitHub账户</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Host</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github-second-account</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  HostName</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  User</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  IdentityFile</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/.ssh/id_rsa2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="新建-克隆仓库" tabindex="-1"><a class="header-anchor" href="#新建-克隆仓库"><span>新建/克隆仓库</span></a></h3><ol><li>使用git管理一个已创建的项目：<code>git init</code></li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /path/to/myproject</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> init</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>执行 <code>git init</code> 后, 会在当前目录下创建一个名为 <code>.git</code> 的子目录，这个目录包含了 Git 仓库的所有元数据和版本控制信息。</p><ol start="2"><li>创建一个新项目并使用Git管理：<code>git init &lt;directory&gt;</code></li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /path/to</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> init</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> newproject</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>执行上述命令后，<code>/path/to/newproject</code> 目录会被创建，并且在该目录下会有一个 <code>.git</code> 子目录。</p><details class="hint-container details"><summary>创建中央仓库/裸仓库</summary><p><code>git init --bare</code> 命令用于初始化一个裸仓库（bare repository）。与普通仓库不同的是，裸仓库并没有工作区或工作树（working tree），即没有我们通常所说的项目文件目录。相反，它只包含.git目录中所有的版本控制数据，这个.git目录实际上是整个仓库的数据库。</p><p>裸仓库的特点：</p><ul><li><strong>没有工作区</strong>：裸仓库不会为你提供一个可以编辑文件的地方。因此，你不能直接在这个仓库中进行文件的修改操作。</li><li><strong>集中管理</strong>：由于缺乏工作区，裸仓库通常被用作远程仓库，用于多开发者之间的代码共享和协作。</li><li><strong>节省空间</strong>：因为没有工作区文件的存在，所以裸仓库占用的空间比带有工作区的仓库要小。</li></ul><p>在团队开发中，通常会在服务器上创建一个裸仓库，作为所有开发者推送变更的目标仓库。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ssh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">use</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">r&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">@</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">hos</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">t&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> path/above/repo</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> init</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --bare</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my-project.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>一般来说，用 <code>--bare</code> 标记初始化的仓库以 <code>.git</code> 结尾。比如，一个叫<code>my-project</code>的仓库，它的空版本应该保存在 <code>my-project.git</code> 目录下。</li><li>裸库的目录下没有.git目录，一般将其作为远端备份或公共版本库，不能执行依赖于工作区的 Git 命令。</li></ul><p><mark>在使用 GitHub、GitLab 或其他类似的在线 Git 托管服务时，通常不需要手动使用 <code>git init --bare</code> 命令来创建裸仓库。这是因为这些平台已经为用户提供了创建裸仓库的服务</mark>。</p></details><ol start="3"><li>克隆远程仓库：<code>git clone</code></li></ol><p>在已存在远程仓库时，使用 <code>git clone</code> 克隆项目到本地即可：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/user/repo.git</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 执行该命令会在当前目录下创建一个名为 \`repo\` 的目录，然后将仓库的内容克隆到这个目录中</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你希望将仓库克隆到一个不同的目录中，可以显式指定本地目录。例如：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/user/repo.git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mylocaldir</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这条命令会克隆 <code>repo.git</code> 远程仓库，并在当前目录下创建一个名为 <code>mylocaldir</code> 的目录，然后将仓库的内容克隆到这个目录中。</p><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>注意 远程仓库的 <code>.git</code> 拓展名克隆到本地时会被去除。它表明了本地仓库的非裸状态</p></div><h3 id="忽略文件" tabindex="-1"><a class="header-anchor" href="#忽略文件"><span>忽略文件</span></a></h3><p><code>git</code> 的忽略文件（<code>.gitignore</code>）是一个非常有用的工具，用于指定哪些文件或目录不应该被 <code>git</code> 跟踪。</p><ol><li><strong>目的</strong>：告诉 <code>git</code> 哪些文件或目录应该被忽略，不纳入版本控制。</li><li><strong>位置</strong>：通常放在<mark>仓库的根目录下</mark>，文件名是 <code>.gitignore</code>。</li><li><strong>格式</strong>：每一行指定一个模式，用于匹配文件或目录。</li></ol><div class="hint-container info"><p class="hint-container-title">特殊字符</p><ul><li><strong><code>*</code></strong>：匹配任意数量的任意字符。</li><li><strong><code>?</code></strong>：匹配任意单个字符。</li><li><strong><code>[abc]</code></strong>：匹配括号内的任意一个字符。</li><li><strong><code>[a-z]</code></strong>：匹配范围内的任意一个字符。</li><li><strong><code>**</code></strong>：匹配任意数量的目录层次。</li></ul></div><p><strong>常见的忽略规则</strong></p><h4 id="_1-忽略特定文件" tabindex="-1"><a class="header-anchor" href="#_1-忽略特定文件"><span>1. 忽略特定文件</span></a></h4><div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 忽略单个文件</span></span>
<span class="line"><span>file.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-忽略特定类型的文件" tabindex="-1"><a class="header-anchor" href="#_2-忽略特定类型的文件"><span>2. 忽略特定类型的文件</span></a></h4><div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 忽略所有 .log 文件</span></span>
<span class="line"><span>*.log</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-忽略特定目录" tabindex="-1"><a class="header-anchor" href="#_3-忽略特定目录"><span>3. 忽略特定目录</span></a></h4><div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 忽略整个目录及其内容</span></span>
<span class="line"><span>dir/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-忽略特定目录中的特定文件" tabindex="-1"><a class="header-anchor" href="#_4-忽略特定目录中的特定文件"><span>4. 忽略特定目录中的特定文件</span></a></h4><div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 忽略 dir/ 下的所有 .tmp 文件</span></span>
<span class="line"><span>dir/*.tmp</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-忽略特定路径下的文件" tabindex="-1"><a class="header-anchor" href="#_5-忽略特定路径下的文件"><span>5. 忽略特定路径下的文件</span></a></h4><div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 忽略 project/ 下的所有 .log 文件</span></span>
<span class="line"><span>project/*.log</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6-忽略特定路径下的目录" tabindex="-1"><a class="header-anchor" href="#_6-忽略特定路径下的目录"><span>6. 忽略特定路径下的目录</span></a></h4><div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 忽略 project/ 下的所有 build 目录</span></span>
<span class="line"><span>project/build/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_7-忽略所有子目录中的特定文件" tabindex="-1"><a class="header-anchor" href="#_7-忽略所有子目录中的特定文件"><span>7. 忽略所有子目录中的特定文件</span></a></h4><div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 忽略所有子目录中的 .DS_Store 文件</span></span>
<span class="line"><span>**/.DS_Store</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_8-忽略所有子目录中的特定目录" tabindex="-1"><a class="header-anchor" href="#_8-忽略所有子目录中的特定目录"><span>8. 忽略所有子目录中的特定目录</span></a></h4><div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 忽略所有子目录中的 node_modules 目录</span></span>
<span class="line"><span>**/node_modules/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_9-忽略特定路径下的所有文件" tabindex="-1"><a class="header-anchor" href="#_9-忽略特定路径下的所有文件"><span>9. 忽略特定路径下的所有文件</span></a></h4><div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 忽略 logs/ 目录下的所有文件</span></span>
<span class="line"><span>logs/*</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_10-忽略特定路径下的所有目录" tabindex="-1"><a class="header-anchor" href="#_10-忽略特定路径下的所有目录"><span>10. 忽略特定路径下的所有目录</span></a></h4><div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 忽略 logs/ 目录下的所有目录</span></span>
<span class="line"><span>logs/**/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_11-忽略特定路径下的所有文件和目录" tabindex="-1"><a class="header-anchor" href="#_11-忽略特定路径下的所有文件和目录"><span>11. 忽略特定路径下的所有文件和目录</span></a></h4><div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 忽略 logs/ 目录下的所有文件和目录</span></span>
<span class="line"><span>logs/**</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_12-忽略特定路径下的所有文件-但保留某些文件" tabindex="-1"><a class="header-anchor" href="#_12-忽略特定路径下的所有文件-但保留某些文件"><span>12. 忽略特定路径下的所有文件，但保留某些文件</span></a></h4><div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 忽略 logs/ 目录下的所有文件，但保留 logs/error.log</span></span>
<span class="line"><span>logs/*</span></span>
<span class="line"><span>!logs/error.log</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>忽略已跟踪的文件</strong></p><p>如果已经将某个文件或目录添加到仓库中，然后又将其添加到 <code>.gitignore</code> 文件中，<code>git</code> 仍然会继续跟踪这些文件。要停止跟踪这些文件，你需要先从仓库中删除它们，然后再提交：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 删除文件但仍保留在工作区中</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --cached</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> file.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 删除目录但仍保留在工作区中</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -r</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --cached</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dir/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 提交更改</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Stop tracking ignored files&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>检查忽略规则</strong>： 可以使用 <code>git check-ignore</code> 命令来检查某个文件是否被忽略：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 检查 file.txt 是否被忽略</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> check-ignore</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> file.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查看仓库状态" tabindex="-1"><a class="header-anchor" href="#查看仓库状态"><span>查看仓库状态</span></a></h3><ol><li><code>git status</code> 命令显示工作目录和缓存区的状态。你可以看到哪些更改被缓存了，哪些还没有，以及哪些还未被 Git 追踪</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> status</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            # 输出的命令很详细，但有些繁琐</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>git status</code> 是一个相对简单的命令。 它告诉你 <code>git add</code> 和 <code>git commit</code> 的进展</p><details class="hint-container details"><summary>\`git status -s\` 或 \`git status --short\` 命令</summary><p>如果用 <code>git status -s</code> 或 <code>git status --short</code> 命令，会得到更为紧凑的格式输出，标记的具体含义如下：</p><ul><li>新添加的未跟踪文件前面有 ?? 标记，</li><li>新添加到暂存区中的文件前面有 A 标记，</li><li>修改过的文件前面有 M标记。M 有两个可以出现的位置: <ul><li>出现在右边的 M 表示该文件被修改了但是还没放入暂存区</li><li>出现在靠左边的 M 表示该文件被修改了并放入了暂存区</li></ul></li></ul><p>输出标记会有两列,第一列是对staging区域而言,第二列是对working目录而言</p></details><ol start="2"><li><code>git log</code> 命令显示已提交的快照。你可以列出项目历史，筛选，以及搜索特定更改。<br><code>git status</code> 查看的是工作目录和缓存区，而 <code>git log</code> 只作用于提交的项目历史。</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 使用默认格式显示完整地项目历史。如果输出超过一屏，你可以用 \`空格键\` 来滚动，按 \`q\` 退出。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> log</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 用 \`&lt;limit&gt;\` 限制提交的数量。比如 \`git log -n 3\` 只会显示 3 个提交</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> log</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">limi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">t&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="提交到本地仓库" tabindex="-1"><a class="header-anchor" href="#提交到本地仓库"><span>提交到本地仓库</span></a></h3><ol><li>将工作目录中的变化添加到暂存区： <code>git add</code></li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">fil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt;        </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 将 \`&lt;file&gt;\` 中的更改加入下次提交的缓存</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">director</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">y&gt;   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 将 \`&lt;directory&gt;\` 下的更改加入下次提交的缓存</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 提交新文件(new)和被修改(modified)文件，不包括被删除(deleted)文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -u</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   # 提交被修改(modified)和被删除(deleted)文件，不包括新文件(new)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -A</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   # 提交所有变化</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>将暂存区（staging area）中的更改记录到仓库的历史记录中: <code>git commit</code></li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;&lt;message&gt;&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">自动将所有已跟踪文件的更改添加到暂存区，然后提交</p><p>一次性完成暂存和提交操作，适用于已跟踪文件的更改：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -a</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Fixed typo in README&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>该命令相当于执行了 <code>git add</code> 和 <code>git commit</code> 两个命令</p><p>【注意】：<code>git commit -a</code> 只会处理<mark>已跟踪</mark>文件的更改，不会处理新添加的未跟踪文件。如果你有新的文件需要添加到仓库中，仍然需要手动使用 <code>git add</code> 命令。</p></div><ol start="3"><li>修改最近一次提交的信息或内容</li></ol><p><code>git commit --amend</code> 允许你在不创建新提交记录的情况下，更新最近的一次提交。这在以下几种情况下特别有用：</p><ul><li><p><strong>添加遗漏的更改</strong>：如果你忘记在最近一次提交中添加某些文件或更改。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 暂存遗漏的文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> newfile.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 修改最近一次提交</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --amend</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --no-edit</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>修改最近一次提交信息并添加新的更改</strong>：假设你需要修改最近一次提交的信息，并且还有新的更改需要添加。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 暂存新的更改(修改了README.md的内容，并新增了newfile.txt文件)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> README.md</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> newfile.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 修改提交信息并添加新的更改</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --amend</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Fix typo in README and add newfile.txt&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p><code>git commit --amend</code> 更适合在本地<mark>尚未推送到远程仓库的情况下</mark>使用。在多人合作开发的情形下，如果已经将提交推送到远程仓库，修改后再新增一个提交通常是更合适的做法。</p><h3 id="远程仓库连接" tabindex="-1"><a class="header-anchor" href="#远程仓库连接"><span>远程仓库连接</span></a></h3><p><code>git remote</code> 命令允许你创建、查看和删除和其它仓库之间的连接:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#列出你和其他远程仓库之间的连接（-v 同时显示每个连接的 URL）</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> remote</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#创建一个新的远程仓库连接。添加之后 name 可作为 url 的别名在其他 Git 命令中使用                            </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">nam</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt; &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">l&gt;              </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 删除名为&lt;name&gt;的远程仓库连接</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">nam</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 将远程连接从 &lt;old-name&gt; 重命名为 &lt;new-name&gt;                     </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rename</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">old-nam</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt; &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">new-nam</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要将代码同时推送到多个远程仓库的情形：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://gitee.com/username/repo.git</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> set-url</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/username/repo.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="远程代码同步" tabindex="-1"><a class="header-anchor" href="#远程代码同步"><span>远程代码同步</span></a></h3><ol><li><code>git fetch</code> : 下载远程仓库中的所有分支和标签，但不会自动合并到当前分支</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> fetch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [remote-name]    </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 例：git fetch origin</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看远程分支</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> branch</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -r</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#  查看远程分支 main 的最新提交</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> log</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin/main</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><code>git merge</code> : 将一个分支的更改合并到当前分支中</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> merge</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [branch-name]   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 例如：git merge origin/main</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果合并过程中出现冲突，Git 会提示你解决冲突。解决冲突后，需要手动 <code>git add</code> 冲突文件，然后 <code>git commit</code> 完成合并。</p><ol start="3"><li><code>git pull</code> : 等同于 <code>git fetch</code> 和 <code>git merge</code> 的组合</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pull</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [remote-name] [branch-name]  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 如：git pull origin main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 拉取远程仓库的最新代码并合并到当前分支</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pull</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 和上一个命令相同，但使用 \`git rebase\` 合并远程分支和本地分支，而不是使用 \`git merge\`</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pull</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --rebase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [remote-name]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>git pull 强制覆盖本地代码：<a href="https://blog.csdn.net/yaoyutian/article/details/119105728" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/yaoyutian/article/details/119105728</a></p><h3 id="推送到远程仓库" tabindex="-1"><a class="header-anchor" href="#推送到远程仓库"><span>推送到远程仓库</span></a></h3><p><code>git push</code>：将本地分支的更新，推送到远程</p><p>例：将本地的master分支推送到origin远程主机的master分支:</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 将本地的 master 分支推送到远程仓库的 master 分支,如果后者不存在，则会被新建 (第一次推送)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> push</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -u</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> master</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># -u选项指定一个默认远程主机，这样后面就可以不加任何参数使用git push</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 推送当前分支的更改到其关联的上游分支(后续推送)            </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">     </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 推送所有分支到远程仓库</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> push</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --all</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>删除远程仓库的分支/强制覆盖, 慎用！</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> push</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> :master</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">          #推送一个空的本地分支到远程分支,等同于:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> push</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --delete</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> master</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 强制用本地的代码去覆盖掉远程仓库的代码 (-f为force，意为：强行、强制)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> push</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> master</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="git分支管理及应用" tabindex="-1"><a class="header-anchor" href="#git分支管理及应用"><span>Git分支管理及应用</span></a></h2><p>一个项目只允许有一个主分支，通常用来合并其他开发完毕的分支</p><p><code>git branch</code>: 查看当前分支（git branch命令会列出所有的分支，当前分支面前会标有一个*号）例:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> branch</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">* dev</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  master</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建-切换分支" tabindex="-1"><a class="header-anchor" href="#创建-切换分支"><span>创建/切换分支</span></a></h3><ol><li>创建分支：Git 中创建分支是一个非常常见的操作，用于在不同的功能或特性之间隔离开发工作</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建一个新的分支</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> branch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> new-branch-namer</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 切换到新创建的分支</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> new-branch-name</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>创建一个新的分支并立即切换到该分支</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -b</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> new-branch-name</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   # -b 参数表示创建并切换分支</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>例：创建一个名为 dev 的新分支，并立即切换到该分支</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 新分支的起点是当前分支的最新提交</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -b</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 新分支的起点是远程仓库 origin 中的 dev 分支</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -b</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin/dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>如果需要删除一个分支，可以使用以下命令：</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> branch</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> branch-name</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="合并分支" tabindex="-1"><a class="header-anchor" href="#合并分支"><span>合并分支</span></a></h3><p><code>git merge</code>用于将一个分支的更改合并到另一个分支中</p><p>例：假设现在需要将源分支(feature-branch)合并到目标分支(main)：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 1. 切换到目标分支</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 2. 合并源分支</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> merge</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> feature-branch</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><strong>快进合并（Fast-Forward Merge）</strong>: 如果目标分支的最新提交是源分支的祖先，Git 会执行快进合并（Fast-Forward Merge），即直接将目标分支的指针移动到源分支的最新提交。</p></li><li><p><strong>非快进合并（Non-Fast-Forward Merge）</strong>: 如果目标分支的最新提交不是源分支的祖先，Git 会创建一个新的合并提交，将两个分支的更改整合在一起。</p></li><li><p><strong>无快进合并（No Fast-Forward Merge）</strong>: 如果你希望强制创建一个新的合并提交，即使可以进行快进合并，可以使用 <code>--no-ff</code> 选项：</p></li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> merge</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --no-ff</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> feature-branch</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果合并过程中出现冲突。解决冲突后，需要手动 <code>git add</code> 冲突文件，然后提交</p><h3 id="解决合并冲突" tabindex="-1"><a class="header-anchor" href="#解决合并冲突"><span>解决合并冲突</span></a></h3><p>如果有冲突，Git 会提示你解决冲突。示例：</p><p>现有这样一个项目（共有两次提交）：</p><figure><img src="https://image.ventix.top/img01/202101101711452.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>共有两个项目成员（Neil 和 itdrizzle）进行开发：</p><figure><img src="https://image.ventix.top/img01/202101101713329.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Neil 先对 demo.txt 文件进行了修改：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">test</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Neil</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> change</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> file</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 新增的内容</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后进行了提交，并push到了 远程仓库</p><figure><img src="https://image.ventix.top/img01/202101101714618.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>现在 itdrizzle 还不知道有人 进行了提交，他也想对 demo.txt 文件进行一些修改：</p><figure><img src="https://image.ventix.top/img01/202101101715829.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>同样，他也进行了 提交 并push 到远程仓库：</p><figure><img src="https://image.ventix.top/img01/202101101716605.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>显然，结果不尽人意，冲突已经发生，需要解决</p><p>itdrizzle 这时先将远程仓库的代码拉取到本地，而且使用了 git pull ，希望能自动合并</p><figure><img src="https://image.ventix.top/img01/202101101717509.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>结果显然不行，需要 itdrizzle 手动解决冲突再进行提交：</p><figure><img src="https://image.ventix.top/img01/202101101718653.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>解决冲突后，itdrizzle 再次进行了提交：</p><figure><img src="https://image.ventix.top/img01/202101101718656.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>此时 Neil 再去 git pull 即可获取最新的项目信息：</p><figure><img src="https://image.ventix.top/img01/202101101718521.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="分支的使用场景" tabindex="-1"><a class="header-anchor" href="#分支的使用场景"><span>分支的使用场景</span></a></h3>`,134)),d(t,{id:"739",data:[{id:"功能开发分支"},{id:"Bug修复分支"},{id:"发布分支"},{id:"热修复分支"}],active:3},{title0:e(({value:l,isActive:n})=>a[6]||(a[6]=[s("功能开发分支")])),title1:e(({value:l,isActive:n})=>a[7]||(a[7]=[s("Bug修复分支")])),title2:e(({value:l,isActive:n})=>a[8]||(a[8]=[s("发布分支")])),title3:e(({value:l,isActive:n})=>a[9]||(a[9]=[s("热修复分支")])),tab0:e(({value:l,isActive:n})=>a[10]||(a[10]=[i("p",null,"每个新的功能或特性开发都在一个独立的分支上进行",-1),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 1. 创建功能分支")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," checkout"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -b"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," feature-branch")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 2. 在 feature-branch 上进行开发工作, 单元测试和集成测试")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 3. 测试通过后，将功能分支合并到主分支")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," checkout"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," main")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," merge"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," feature-branch")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),i("p",null,"这样可以避免开发过程中对主分支的影响，确保主分支始终处于可部署状态。",-1)])),tab1:e(({value:l,isActive:n})=>a[11]||(a[11]=[i("p",null,"当发现生产环境中存在Bug时，可以在一个独立的分支上进行修复",-1),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 1. 创建Bug修复分支")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," checkout"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -b"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," bugfix-branch")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 2. 在 bugfix-branch 上进行Bug修复,进行单元测试和回归测试")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 3. 测试通过后，将Bug修复分支合并到主分支")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," checkout"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," main")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," merge"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," bugfix-branch")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])),tab2:e(({value:l,isActive:n})=>a[12]||(a[12]=[i("p",null,"发布分支用于准备即将发布的版本，包含最终的测试、文档更新和构建优化等工作。",-1),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 1. 创建发布分支")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," checkout"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -b"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," release-1.0")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 2. 准备发布：在 release-1.0 分支上进行最终的测试、文档更新和构建优化")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 3. 准备完成后，将发布分支合并到主分支")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," checkout"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," main")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," merge"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," release-1.0")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 4. 为发布的版本打标签")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," tag"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," v1.0")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," push"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," origin"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," v1.0")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])),tab3:e(({value:l,isActive:n})=>a[13]||(a[13]=[i("p",null,"当生产环境中出现紧急问题时，需要快速修复并发布热修复版本",-1),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 1. 创建热修复分支")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," checkout"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -b"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," hotfix-branch")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 2. 在 hotfix-branch 上进行紧急修复, 进行快速测试")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 3. 测试通过后，将热修复分支合并到主分支和当前的发布分支")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," checkout"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," main")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," merge"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," hotfix-branch")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," checkout"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," release-1.0")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," merge"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," hotfix-branch")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 4. 为热修复版本打标签")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," tag"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," v1.0.1")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," push"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," origin"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," v1.0.1")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])),_:1}),a[22]||(a[22]=i("h2",{id:"其他常用功能及命令",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#其他常用功能及命令"},[i("span",null,"其他常用功能及命令")])],-1)),a[23]||(a[23]=i("h3",{id:"撤销本地修改",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#撤销本地修改"},[i("span",null,"撤销本地修改")])],-1)),d(t,{id:"774",data:[{id:"撤销/删除工作区中修改"},{id:"撤销暂存区中的修改"},{id:"撤销已提交的修改"}],active:0},{title0:e(({value:l,isActive:n})=>a[14]||(a[14]=[s("撤销/删除工作区中修改")])),title1:e(({value:l,isActive:n})=>a[15]||(a[15]=[s("撤销暂存区中的修改")])),title2:e(({value:l,isActive:n})=>a[16]||(a[16]=[s("撤销已提交的修改")])),tab0:e(({value:l,isActive:n})=>a[17]||(a[17]=[i("p",null,[s("场景描述: 已经对一些文件进行了修改，但还没有执行 "),i("code",null,"git add"),s(" 操作，这些修改还未被暂存。")],-1),i("ul",null,[i("li",null,[i("p",null,[i("strong",null,"撤销所有未暂存的修改"),s("：")]),i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh","data-title":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," checkout"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," .")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])]),i("p",null,"将工作目录中的所有文件恢复到最近一次提交的状态，未暂存的修改将被删除。")]),i("li",null,[i("p",null,[i("strong",null,"撤销特定文件的未暂存修改"),s("：")]),i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh","data-title":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," checkout"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," <"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"fil"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"e>")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])]),i("p",null,"将指定文件恢复到最近一次提交的状态，未暂存的修改将被删除。")])],-1)])),tab1:e(({value:l,isActive:n})=>a[18]||(a[18]=[i("p",null,[s("场景描述：已经对一些文件进行了修改，并且已经执行了 "),i("code",null,"git add"),s(" 操作，这些修改已经被暂存。")],-1),i("ul",null,[i("li",null,[i("p",null,[i("strong",null,"撤销所有暂存区的修改"),s("：")]),i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh","data-title":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," reset")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])]),i("p",null,"将所有已暂存的修改从暂存区移除，但保留工作目录中的修改。")]),i("li",null,[i("p",null,[i("strong",null,"撤销特定文件的暂存区修改"),s("：")]),i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh","data-title":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," reset"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," <"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"fil"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"e>")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])]),i("p",null,"将指定文件从暂存区移除，但保留工作目录中的修改。")])],-1),i("p",null,[s("【注意】"),i("code",null,"git rm --cached <file>"),s("：用于从版本控制中移除文件，但仍然保留文件在本地工作区中，通常用于移除敏感文件或不再需要版本控制的文件。")],-1)])),tab2:e(({value:l,isActive:n})=>a[19]||(a[19]=[i("p",null,"场景描述: 已经对一些文件进行了修改，并且已经提交了这些修改。",-1),i("ul",null,[i("li",null,[i("p",null,[i("strong",null,"撤销最后一次提交，保留工作区中的修改"),s("：")]),i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh","data-title":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," reset"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," HEAD~1")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])]),i("p",null,"撤销最后一次提交，但保留工作目录中的修改。")]),i("li",null,[i("p",null,[i("strong",null,"撤销最后一次提交，删除工作区中的修改"),s("：")]),i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh","data-title":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," reset"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --hard"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," HEAD~1")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])]),i("p",null,"撤销最后一次提交，并删除工作目录中的修改。请注意，这个操作是不可逆的。")]),i("li",null,[i("p",null,[i("strong",null,"彻底撤销特定提交，删除工作区中的修改"),s("：")]),i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh","data-title":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," reset"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --hard"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," <"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"commit-has"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"h>")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])]),i("p",null,"将当前分支的HEAD指针重置到指定的提交，并删除所有后续的提交和未提交的修改。请注意，这个操作是不可逆的。")]),i("li",null,[i("p",null,[i("strong",null,"撤销特定提交，保留工作区中的修改"),s("：")]),i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh","data-title":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," revert"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," <"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"commit-has"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"h>")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])]),i("p",null,"创建一个新的提交，撤销指定提交的更改。这种方法不会改变提交历史，适用于已经推送的提交。")])],-1)])),_:1}),a[24]||(a[24]=h(`<h3 id="撤销远程修改" tabindex="-1"><a class="header-anchor" href="#撤销远程修改"><span>撤销远程修改</span></a></h3><p>开发过程中发现自己提交到远程仓库的代码有问题，需要撤销</p><ol><li><p><strong>找到需要撤销的提交的哈希值</strong>：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> log</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查看提交历史，找到需要撤销的提交的哈希值（例如 <code>abc1234</code>）。</p></li><li><p><strong>创建一个新的提交来撤销指定的提交</strong>：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> revert</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> abc1234</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>创建一个新的提交，撤销指定提交的更改。</p></li><li><p><strong>推送新的提交到远程仓库</strong>：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> push</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>将新的提交推送到远程仓库，撤销之前的错误提交。</p></li></ol><div class="hint-container info"><p class="hint-container-title">情景2： 远程仓库被新人提交了大量的依赖文件，需要删除</p><ol><li><p><strong>通知团队成员暂停提交代码</strong>：发送邮件或即时消息，告知团队成员暂停提交代码，直到问题解决。</p></li><li><p><strong>找到需要回退的提交的哈希值</strong>：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> log</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查看提交历史，找到需要回退到的提交的哈希值（例如 <code>abc1234</code>）。</p></li><li><p><strong>将本地分支回退到目标提交</strong>：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> reset</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --hard</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> abc1234</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>将本地分支回退到指定的提交，删除所有后续的提交。</p></li><li><p><strong>强制推送回退后的状态到远程仓库</strong>：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> push</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --force</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>将本地分支的状态强制推送到远程仓库，覆盖远程仓库的历史。</p></li><li><p><strong>通知团队成员继续工作</strong>：发送邮件或即时消息，告知团队成员可以继续提交代码，并提醒他们拉取最新的代码：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pull</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --rebase</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol></div><h3 id="git-stash" tabindex="-1"><a class="header-anchor" href="#git-stash"><span>git stash</span></a></h3><p><code>git stash</code> 允许你暂时保存当前工作目录中的更改，而不需要提交这些更改。这对于以下几种场景特别有用：</p><ol><li><strong>切换任务</strong>：当你正在开发一个功能，但突然需要切换到另一个任务时，可以使用 <code>git stash</code> 暂存当前的更改，以便稍后恢复。</li><li><strong>解决冲突</strong>：当你需要拉取最新的代码，但本地有未提交的更改时，可以使用 <code>git stash</code> 暂存更改，然后再拉取最新的代码。</li></ol><div class="hint-container info"><p class="hint-container-title">git stash 基本用法</p><h4 id="_1-暂存当前更改" tabindex="-1"><a class="header-anchor" href="#_1-暂存当前更改"><span>1. 暂存当前更改</span></a></h4><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stash</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这个命令会将当前工作目录中的所有更改（包括已跟踪和未跟踪的文件）暂存起来，并将工作目录恢复到最近一次提交的状态。</p><h4 id="_2-查看暂存列表" tabindex="-1"><a class="header-anchor" href="#_2-查看暂存列表"><span>2. 查看暂存列表</span></a></h4><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> list</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这个命令会列出所有暂存的更改。每个暂存的更改都会有一个唯一的标识符，格式为 <code>stash@{n}</code>，其中 <code>n</code> 是一个整数。</p><h4 id="_3-应用最近的暂存" tabindex="-1"><a class="header-anchor" href="#_3-应用最近的暂存"><span>3. 应用最近的暂存</span></a></h4><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apply</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这个命令会将最近一次暂存的更改重新应用到工作目录中，但不会从暂存列表中移除该暂存。</p><h4 id="_4-应用特定的暂存" tabindex="-1"><a class="header-anchor" href="#_4-应用特定的暂存"><span>4. 应用特定的暂存</span></a></h4><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apply</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stash@{n}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这个命令会将指定的暂存重新应用到工作目录中，但不会从暂存列表中移除该暂存。</p><h4 id="_5-应用并移除最近的暂存" tabindex="-1"><a class="header-anchor" href="#_5-应用并移除最近的暂存"><span>5. 应用并移除最近的暂存</span></a></h4><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pop</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这个命令会将最近一次暂存的更改重新应用到工作目录中，并从暂存列表中移除该暂存。</p><h4 id="_6-应用并移除特定的暂存" tabindex="-1"><a class="header-anchor" href="#_6-应用并移除特定的暂存"><span>6. 应用并移除特定的暂存</span></a></h4><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pop</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stash@{n}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这个命令会将指定的暂存重新应用到工作目录中，并从暂存列表中移除该暂存。</p><h4 id="_7-删除特定的暂存" tabindex="-1"><a class="header-anchor" href="#_7-删除特定的暂存"><span>7. 删除特定的暂存</span></a></h4><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> drop</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stash@{n}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这个命令会从暂存列表中删除指定的暂存。</p><h4 id="_8-删除所有暂存" tabindex="-1"><a class="header-anchor" href="#_8-删除所有暂存"><span>8. 删除所有暂存</span></a></h4><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clear</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这个命令会从暂存列表中删除所有的暂存。</p></div><div class="hint-container tip"><p class="hint-container-title">进阶用法</p><h4 id="_1-暂存部分更改" tabindex="-1"><a class="header-anchor" href="#_1-暂存部分更改"><span>1. 暂存部分更改</span></a></h4><p>如果你只想暂存部分更改，可以使用 <code>git add</code> 选择性地暂存某些文件或文件的部分内容，然后再使用 <code>git stash</code>。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> file1.txt</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stash</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-暂存未跟踪的文件" tabindex="-1"><a class="header-anchor" href="#_2-暂存未跟踪的文件"><span>2. 暂存未跟踪的文件</span></a></h4><p>默认情况下，<code>git stash</code> 不会暂存未跟踪的文件（即从未被 <code>git add</code> 添加过的文件）。如果你希望暂存未跟踪的文件，可以使用 <code>--include-untracked</code> 选项。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stash</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --include-untracked</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_3-创建带注释的暂存" tabindex="-1"><a class="header-anchor" href="#_3-创建带注释的暂存"><span>3. 创建带注释的暂存</span></a></h4><p>你可以为暂存添加注释，以便更好地管理和识别不同的暂存。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> save</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;这是一个临时保存的更改&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_4-查看暂存的详细信息" tabindex="-1"><a class="header-anchor" href="#_4-查看暂存的详细信息"><span>4. 查看暂存的详细信息</span></a></h4><p>你可以查看某个暂存的详细信息，包括更改的内容。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> show</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stash@{n}</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><p>示例: 假设你在开发一个新的功能，但突然需要修复一个紧急的Bug。你可以按照以下步骤操作：</p><ol><li><p><strong>暂存当前更改</strong>：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stash</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>切换到修复Bug的分支</strong>：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -b</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bugfix-branch</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>修复Bug并提交</strong>：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 进行Bug修复</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Fix urgent bug&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>切换回原来的分支</strong>：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> feature-branch</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>恢复暂存的更改</strong>：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pop</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><p>通过这些步骤，你可以轻松地在不同的任务之间切换，同时保持工作区的整洁。</p><h3 id="git-rebase" tabindex="-1"><a class="header-anchor" href="#git-rebase"><span>git rebase</span></a></h3><p><code>git rebase</code> 这个命令经常被人认为是一种 Git 巫术，初学者应该避而远之。</p><p><code>git rebase</code> 和<code>git merge</code> 做的事其实是差不多的。它们都被设计来将一个分支的更改并入另一个分支，但是方式和结果有些不同。</p><p>将 master 分支合并到 feature 分支的命令：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> feature</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> merge</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> master</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 或者，你也可以把它们压缩在一行里:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> merge</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> master</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> feature</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://image.ventix.top/img01/202201101721194.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>you can <mark>rebase the feature branch onto main branch</mark> using the following commands:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> feature</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rebase</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>rebase 会使项目历史呈现出完美的线性，但也会失去安全性和可跟踪性</p><div class="hint-container caution"><p class="hint-container-title">The golden rule of rebasing</p><p>Rebase 的黄金法则: <mark>绝不要在公共的分支上使用它</mark>。</p><p>For example: rebased main onto feature branch<br><img src="https://image.ventix.top/img01/202201101721628.png" alt="" loading="lazy"><br> 这将导致你的代码仓库中 master 分支上的所有提交都移到 feature 分支后面，但其他所有的开发者还在原来的 master 上工作，你的 master 分支和其他人的 master分支已经&quot;分叉了&quot;。</p><p>如果你想把 rebase 之后的 master 分支推送到远程仓库，Git 会阻止你这么做，因为两个分支包含冲突。但你可以传入 <code>--force</code> 标记来强行推送：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> push</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --force</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 小心 不推荐使用这个命令！</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><p>rebase的使用场景一：</p><details class="hint-container details"><summary>清理本地正在开发的分支</summary><p>隔一段时间执行一次交互式 rebase，可以保证你的 feature 分支中的每一个提交都是专注和有意义的</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> feature</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 交互式 rebase，使用feature 分支中早先的一个提交作为rebase的基(base)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rebase</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> HEAD~3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过指定 <code>HEAD~3</code> 作为新的基提交，实际上没有移动分支, 只是将之后的 3 次提交重写了<br><img src="https://image.ventix.top/img01/202201101721802.png" alt="" loading="lazy"><br><code>HEAD~n</code>: 表示从当前 HEAD 开始往前数 n 个提交。</p><p>如果你想用这个方法重写整个 feature 分支，<code>git merge-base</code> 命令非常方便地找出 feature 分支开始分叉的基:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> merge-base</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> feature</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> master</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   # 这段命令返回基提交的 ID，你可以接下来将它传给 git rebase</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></details><ul><li>调用 <code>git rebase</code> 的时候，你有两个基（base）可以选择：上游分支（比如 master）或者你 feature 分支中早先的一个提交</li></ul><p>rebase的使用场景二：</p><details class="hint-container details"><summary>将上游分支上的更改并入feature分支</summary><p>rebase 到远程分支而不是 master 也是完全合理的。当你和另一个开发者在同一个 feature 分支上协作的时候，你可能会用到rebase，将别人的更改并入自己的仓库</p><p>例: 如果你和另一个开发者 都往 feature 分支上添加了几个提交，如果对方推送到了远程仓库，我们 fetch 之后，要么通过merge合并远程仓库到本地分支，要么把本地分支rebase到远程分支上。</p><p>这里的 rebase 没有违反 rebase 黄金法则，因为只有你的本地分支上的 commit 被移动了，之前的所有东西都没有变。</p><ul><li><code>git pull</code> 命令默认会执行一次merge，但你可以传入<code>--rebase</code> 来强制它通过rebase来整合远程分支</li></ul></details><div class="hint-container info"><p class="hint-container-title">交互式 rebase</p><p>交互式 rebase 是 Git 中一个非常强大的功能，它允许你在提交历史中进行各种操作，比如重排、合并或编辑特定的提交。</p><p>可以通过以下命令启动交互式 rebase：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rebase</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">branc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">h&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/HEAD~n/commitID</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="编辑提交" tabindex="-1"><a class="header-anchor" href="#编辑提交"><span>编辑提交</span></a></h4><p>启动后，Git 会打开一个文本编辑器，并列出一系列可操作的提交。每个提交前面都有一个命令词，默认是 <code>pick</code>，表示保留该提交。可以选择以下操作之一：</p><ul><li><code>pick</code> 或 <code>p</code>: 保留提交。</li><li><code>reword</code> 或 <code>r</code>: 类似于 pick，但是会停下来让你修改该提交的信息。</li><li><code>edit</code> 或 <code>e</code>: 编辑提交。这会暂停 rebase 流程，让你有机会修改该提交的内容，包括文件更改。</li><li><code>squash</code> 或 <code>s</code>: 将此提交与前一个提交合并。第一个提交的信息会被保留，除非你也选择了 <code>fixup</code>。</li><li><code>fixup</code> 或 <code>f</code>: 类似于 squash，但它会丢弃该提交的信息，只保留更改。</li><li><code>exec</code> 或 <code>x</code>: 在提交上执行 shell 命令。</li><li><code>break</code> 或 <code>b</code>: 停止 rebase。</li><li><code>drop</code> 或 <code>d</code>: 删除提交。</li></ul><h4 id="完成交互式-rebase" tabindex="-1"><a class="header-anchor" href="#完成交互式-rebase"><span>完成交互式 Rebase</span></a></h4><p>完成编辑后，保存并关闭编辑器。Git 将按照你的指示执行相应的操作。对于选择了 <code>edit</code> 的提交，Git 会在应用该提交后暂停，让你有机会做进一步的修改。完成修改后，你需要继续 rebase 过程：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rebase</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --continue</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果遇到冲突，解决冲突后也需要手动添加已解决的文件，然后继续 rebase。</p></div>`,28))])}const F=r(c,[["render",o],["__file","git.html.vue"]]),m=JSON.parse('{"path":"/tool/git/git.html","title":"Git版本控制","lang":"en-US","frontmatter":{"order":1,"title":"Git版本控制","description":"SVN 和 Git的本质区别 SVN 和 Git 遵循不同的设计哲学，这些设计哲学导致了它们在使用和性能上的显著差异： 设计哲学 SVN（Subversion）： 基于差异（diff）：SVN 跟踪文件的变化，每次提交记录的是相对于前一个版本的差异（diff）。这种设计使得存储空间相对较小，因为每个版本只存储增量信息。 集中式版本控制系统：SVN 使用...","head":[["meta",{"property":"og:url","content":"https://x.app/tool/git/git.html"}],["meta",{"property":"og:site_name","content":"doc"}],["meta",{"property":"og:title","content":"Git版本控制"}],["meta",{"property":"og:description","content":"SVN 和 Git的本质区别 SVN 和 Git 遵循不同的设计哲学，这些设计哲学导致了它们在使用和性能上的显著差异： 设计哲学 SVN（Subversion）： 基于差异（diff）：SVN 跟踪文件的变化，每次提交记录的是相对于前一个版本的差异（diff）。这种设计使得存储空间相对较小，因为每个版本只存储增量信息。 集中式版本控制系统：SVN 使用..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://image.ventix.top/img01/202101101709051.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-01-10T15:19:41.000Z"}],["meta",{"property":"article:author","content":"ventixy"}],["meta",{"property":"article:modified_time","content":"2025-01-10T15:19:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Git版本控制\\",\\"image\\":[\\"https://image.ventix.top/img01/202101101709051.png\\",\\"https://image.ventix.top/img01/202101101711452.png\\",\\"https://image.ventix.top/img01/202101101713329.png\\",\\"https://image.ventix.top/img01/202101101714618.png\\",\\"https://image.ventix.top/img01/202101101715829.png\\",\\"https://image.ventix.top/img01/202101101716605.png\\",\\"https://image.ventix.top/img01/202101101717509.png\\",\\"https://image.ventix.top/img01/202101101718653.png\\",\\"https://image.ventix.top/img01/202101101718656.png\\",\\"https://image.ventix.top/img01/202101101718521.png\\",\\"https://image.ventix.top/img01/202201101721194.png\\",\\"https://image.ventix.top/img01/202201101721628.png\\",\\"https://image.ventix.top/img01/202201101721802.png\\"],\\"dateModified\\":\\"2025-01-10T15:19:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ventixy\\",\\"url\\":\\"https://www.ventix.top\\"}]}"]]},"headers":[{"level":2,"title":"Git基础命令使用","slug":"git基础命令使用","link":"#git基础命令使用","children":[{"level":3,"title":"安装和配置","slug":"安装和配置","link":"#安装和配置","children":[]},{"level":3,"title":"新建/克隆仓库","slug":"新建-克隆仓库","link":"#新建-克隆仓库","children":[]},{"level":3,"title":"忽略文件","slug":"忽略文件","link":"#忽略文件","children":[]},{"level":3,"title":"查看仓库状态","slug":"查看仓库状态","link":"#查看仓库状态","children":[]},{"level":3,"title":"提交到本地仓库","slug":"提交到本地仓库","link":"#提交到本地仓库","children":[]},{"level":3,"title":"远程仓库连接","slug":"远程仓库连接","link":"#远程仓库连接","children":[]},{"level":3,"title":"远程代码同步","slug":"远程代码同步","link":"#远程代码同步","children":[]},{"level":3,"title":"推送到远程仓库","slug":"推送到远程仓库","link":"#推送到远程仓库","children":[]}]},{"level":2,"title":"Git分支管理及应用","slug":"git分支管理及应用","link":"#git分支管理及应用","children":[{"level":3,"title":"创建/切换分支","slug":"创建-切换分支","link":"#创建-切换分支","children":[]},{"level":3,"title":"合并分支","slug":"合并分支","link":"#合并分支","children":[]},{"level":3,"title":"解决合并冲突","slug":"解决合并冲突","link":"#解决合并冲突","children":[]},{"level":3,"title":"分支的使用场景","slug":"分支的使用场景","link":"#分支的使用场景","children":[]}]},{"level":2,"title":"其他常用功能及命令","slug":"其他常用功能及命令","link":"#其他常用功能及命令","children":[{"level":3,"title":"撤销本地修改","slug":"撤销本地修改","link":"#撤销本地修改","children":[]},{"level":3,"title":"撤销远程修改","slug":"撤销远程修改","link":"#撤销远程修改","children":[]},{"level":3,"title":"git stash","slug":"git-stash","link":"#git-stash","children":[]},{"level":3,"title":"git rebase","slug":"git-rebase","link":"#git-rebase","children":[]}]}],"git":{"createdTime":1736522381000,"updatedTime":1736522381000,"contributors":[{"name":"drizzle","email":"msdrizzle@outlook.com","commits":1}]},"readingTime":{"minutes":28.36,"words":8508},"filePathRelative":"tool/git/git.md","localizedDate":"January 10, 2025","excerpt":"<details class=\\"hint-container details\\"><summary>SVN 和 Git的本质区别</summary>\\n<p>SVN 和 Git 遵循不同的设计哲学，这些设计哲学导致了它们在使用和性能上的显著差异：</p>\\n<h4>设计哲学</h4>\\n<ol>\\n<li>\\n<p><strong>SVN（Subversion）</strong>：</p>\\n<ul>\\n<li><strong>基于差异（diff）</strong>：SVN 跟踪文件的变化，每次提交记录的是相对于前一个版本的差异（diff）。这种设计使得存储空间相对较小，因为每个版本只存储增量信息。</li>\\n<li><strong>集中式版本控制系统</strong>：SVN 使用一个中央仓库来管理所有版本控制的数据，客户端通过网络连接到这个中央仓库进行操作。</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>Git</strong>：</p>\\n<ul>\\n<li><strong>基于快照</strong>：Git 在每次提交中记录文件的完整内容（快照）。这种设计使得每个版本都是独立的，不需要通过版本间的差异组装得到。</li>\\n<li><strong>分布式版本控制系统</strong>：Git 每个克隆的仓库都是一个完整的副本，包含所有历史记录，这使得离线操作成为可能。</li>\\n</ul>\\n</li>\\n</ol>\\n<h4>存储和性能</h4>\\n<ol>\\n<li>\\n<p><strong>存储空间</strong>：</p>\\n<ul>\\n<li><strong>SVN</strong>：由于记录的是差异，SVN 的存储空间通常比 Git 小。每次提交只存储文件的增量信息，减少了冗余。</li>\\n<li><strong>Git</strong>：由于记录的是快照，Git 的存储空间通常比 SVN 大。每次提交都存储文件的完整内容，但 Git 使用了一些优化技术（如压缩和打包）来减少存储空间的需求。</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>性能</strong>：</p>\\n<ul>\\n<li><strong>SVN</strong>：由于需要通过版本间的差异组装文件，SVN 的某些操作（如查看某个版本的文件内容）可能相对较慢。</li>\\n<li><strong>Git</strong>：由于每个版本都是独立的快照，Git 的许多操作（如查看某个版本的文件内容、切换分支等）可以非常快速地完成，因为可以直接从数据库中获取完整的文件内容。</li>\\n</ul>\\n</li>\\n</ol>\\n<h4>优化技术</h4>\\n<p>尽管 Git 记录的是快照，但它使用了一些优化技术来减少存储空间的需求：</p>\\n<ul>\\n<li><strong>压缩</strong>：Git 会定期对对象进行压缩，生成 pack 文件，从而减少存储空间。</li>\\n<li><strong>垃圾回收</strong>：Git 会定期清理不再需要的对象，进一步优化存储空间。</li>\\n<li><strong>Delta 编码</strong>：在打包文件时，Git 也会使用 Delta 编码来减少冗余数据。</li>\\n</ul>\\n<h4>实际对比</h4>\\n<ul>\\n<li><strong>存储空间</strong>：虽然 Git 记录的是快照，但由于优化技术，Git 的实际存储空间需求通常并不会比 SVN 大很多，尤其是在大型项目中。</li>\\n<li><strong>性能</strong>：Git 的操作速度通常比 SVN 快，尤其是对于离线操作和复杂的历史记录查询。</li>\\n</ul>\\n<p>总结:</p>\\n<ul>\\n<li><strong>SVN</strong>：基于差异的版本控制，存储空间较小，但某些操作可能较慢。</li>\\n<li><strong>Git</strong>：基于快照的版本控制，存储空间可能稍大，但操作速度快，支持分布式协作。</li>\\n</ul>\\n<p>Git 通过记录快照来换取更快的操作速度，但通过优化技术，其实际存储空间需求并不会显著高于 SVN。这种设计使得 Git 在现代软件开发中非常受欢迎，特别是在需要频繁分支和合并的场景中。</p>\\n</details>","autoDesc":true}');export{F as comp,m as data};
