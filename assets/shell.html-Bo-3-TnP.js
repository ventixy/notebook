import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,b as e,o as a}from"./app-ZbrBAUos.js";const n={};function h(t,i){return a(),l("div",null,i[0]||(i[0]=[e(`<ol><li><a href="#shell%E5%9F%BA%E7%A1%80%E6%A6%82%E8%BF%B0">Shell基础概述</a></li><li><a href="#shell%E5%8F%98%E9%87%8F">Shell变量</a></li><li><a href="#%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%92%8C%E8%BF%90%E7%AE%97%E7%AC%A6">常用命令和运算符</a></li><li><a href="#shell%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6">Shell流程控制</a></li><li><a href="#shell%E5%87%BD%E6%95%B0%E5%92%8C%E5%B7%A5%E5%85%B7">Shell函数和工具</a></li></ol><hr><h2 id="shell基础概述" tabindex="-1"><a class="header-anchor" href="#shell基础概述"><span>Shell基础概述</span></a></h2><h3 id="shell脚本入门介绍" tabindex="-1"><a class="header-anchor" href="#shell脚本入门介绍"><span>Shell脚本入门介绍</span></a></h3><p>Shell 是一个命令行解释器，它为用户提供了与操作系统交互的接口。Shell 脚本是一种简单的编程语言，允许用户编写一系列命令来自动执行任务。通过 Shell 脚本，可以自动化日常操作、简化复杂的任务，并提高工作效率。</p><h3 id="shell环境类型" tabindex="-1"><a class="header-anchor" href="#shell环境类型"><span>Shell环境类型</span></a></h3><ul><li><strong>Bash（Bourne Again Shell）</strong>：最常用的 Shell，兼容 Bourne Shell。</li><li><strong>Zsh</strong>：功能丰富的 Shell，支持插件和主题，用户体验更好。</li><li><strong>Ksh（Korn Shell）</strong>：结合了 C Shell 和 Bourne Shell 的特点，适合脚本编写。</li><li><strong>Tcsh/Csh</strong>：C Shell 及其改进版本，语法更接近 C 语言。</li></ul><h3 id="编写格式与执行方式" tabindex="-1"><a class="header-anchor" href="#编写格式与执行方式"><span>编写格式与执行方式</span></a></h3><ul><li><strong>编写格式</strong>：Shell 脚本通常以 <code>.sh</code> 为扩展名，第一行应包含解释器路径，如 <code>#!/bin/bash</code>。</li><li><strong>执行方式</strong>： <ul><li>直接运行：赋予文件可执行权限后直接运行 <code>./script.sh</code>。</li><li>通过解释器：使用解释器运行脚本 <code>bash script.sh</code> 或 <code>sh script.sh</code>。</li><li>在命令行中逐条输入命令。</li></ul></li></ul><h3 id="多命令处理" tabindex="-1"><a class="header-anchor" href="#多命令处理"><span>多命令处理</span></a></h3><ul><li><strong>分号分隔</strong>：在同一行上用分号 <code>;</code> 分隔多个命令。</li><li><strong>逻辑运算符</strong>：使用 <code>&amp;&amp;</code> 表示成功后继续执行，<code>||</code> 表示失败后执行。</li><li><strong>管道</strong>：使用 <code>|</code> 将一个命令的输出作为另一个命令的输入。</li><li><strong>后台执行</strong>：在命令末尾添加 <code>&amp;</code> 符号可以让命令在后台运行。</li></ul><hr><h2 id="shell变量" tabindex="-1"><a class="header-anchor" href="#shell变量"><span>Shell变量</span></a></h2><h3 id="自定义变量" tabindex="-1"><a class="header-anchor" href="#自定义变量"><span>自定义变量</span></a></h3><ul><li><strong>全局变量</strong>：在整个脚本中都可见，可以在任何地方声明和使用。</li><li><strong>局部变量</strong>：仅在特定范围内有效，例如函数内部。</li><li><strong>常量</strong>：一旦赋值就不能再改变，通常使用 <code>readonly</code> 关键字定义。</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">VARIABLE</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">value</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">           # 定义变量</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $VARIABLE</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">           # 输出变量值</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">readonly</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> CONSTANT</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">42</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     # 定义常量</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="字符串和数组" tabindex="-1"><a class="header-anchor" href="#字符串和数组"><span>字符串和数组</span></a></h3><ul><li><strong>字符串格式</strong>：双引号 <code>&quot;</code> 支持变量替换和转义字符；单引号 <code>&#39;</code> 不进行任何特殊处理。</li><li><strong>拼接</strong>：直接将两个字符串连接起来或使用 <code>+</code> 操作符。</li><li><strong>截取</strong>：使用 <code>\${VAR:offset:length}</code> 格式从字符串中提取子串。</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">STR</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Hello, World!&quot;</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">STR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">5</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 截取 &quot;Hello&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>数组的定义</strong>：使用 <code>()</code> 定义数组，元素之间用空格分隔。</li><li><strong>获取</strong>：通过索引访问数组元素，使用 <code>@</code> 获取所有元素。</li><li><strong>拼接</strong>：可以直接将两个数组相加。</li><li><strong>删除</strong>：使用 <code>unset</code> 删除数组中的某个元素。</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ARRAY</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;apple&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;banana&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;cherry&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ARRAY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">[1]</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">       # 输出 &quot;banana&quot;</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ARRAY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">[</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">]</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">       # 输出所有元素</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">unset</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ARRAY[1]</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">           # 删除 &quot;banana&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="特殊符号变量" tabindex="-1"><a class="header-anchor" href="#特殊符号变量"><span>特殊符号变量</span></a></h3><ul><li><strong>获取输入参数</strong>：<code>$1</code>, <code>$2</code>, ... 表示第 n 个参数；<code>$@</code> 表示所有参数。</li><li><strong>退出状态码</strong>：<code>$?</code> 获取上一条命令的退出状态。</li><li><strong>进程ID</strong>：<code>$$</code> 获取当前 Shell 进程 ID；<code>$!</code> 获取最近一次后台运行命令的 PID。</li></ul><h3 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量"><span>环境变量</span></a></h3><ul><li><strong>环境变量</strong>：如 <code>PATH</code>, <code>HOME</code> 等，影响系统的全局行为。</li><li><strong>自定义系统环境变量</strong>：可以在 <code>~/.bashrc</code> 或 <code>/etc/environment</code> 中添加。</li><li><strong>加载流程</strong>：启动时读取配置文件，修改后需要重新加载（<code>. ~/.bashrc</code>）。</li><li><strong>识别Shell环境类型</strong>：可以通过 <code>$SHELL</code> 环境变量查看当前使用的 Shell 类型。</li></ul><hr><h2 id="常用命令和运算符" tabindex="-1"><a class="header-anchor" href="#常用命令和运算符"><span>常用命令和运算符</span></a></h2><h3 id="shell内置命令" tabindex="-1"><a class="header-anchor" href="#shell内置命令"><span>Shell内置命令</span></a></h3><ul><li><strong>设置别名</strong>：<code>alias</code> 创建命令的快捷方式。</li><li><strong>退出</strong>：<code>exit</code> 或 <code>logout</code> 退出当前会话。</li><li><strong>输入输出</strong>：<code>read</code> 从键盘读取输入；<code>echo</code> 输出文本到终端。</li><li><strong>declare</strong>：用于声明变量属性，如整数、只读等。</li><li><strong>test</strong>：条件测试命令，相当于 <code>[ ]</code>。</li></ul><h3 id="shell计算命令" tabindex="-1"><a class="header-anchor" href="#shell计算命令"><span>Shell计算命令</span></a></h3><ul><li><strong>(()), let, $[]</strong>：进行算术运算。</li><li><strong>bc</strong>：高精度计算器工具，支持小数运算。</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">let</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;sum = 5 + 3&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">         # 使用 let 进行算术运算</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> $(( </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">5</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ))         </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 使用 (( )) 进行算术运算</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;$[5 + 3]&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">           # 使用 $[] 进行算术运算 (已废弃)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;scale=2; 5 / 3&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bc</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 使用 bc 进行浮点运算</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shell运算符" tabindex="-1"><a class="header-anchor" href="#shell运算符"><span>Shell运算符</span></a></h3><ul><li><strong>算术运算符</strong>：<code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>, <code>%</code></li><li><strong>比较运算符</strong>：<code>-eq</code>, <code>-ne</code>, <code>-lt</code>, <code>-le</code>, <code>-gt</code>, <code>-ge</code>（适用于整数）</li><li><strong>布尔运算符</strong>：<code>&amp;&amp;</code>, <code>||</code>, <code>!</code></li><li><strong>逻辑运算符</strong>：<code>-a</code>（AND），<code>-o</code>（OR）</li><li><strong>文件测试</strong>：<code>-f</code>, <code>-d</code>, <code>-e</code>, <code>-r</code>, <code>-w</code>, <code>-x</code> 等，用于检查文件属性。</li></ul><hr><h2 id="shell流程控制" tabindex="-1"><a class="header-anchor" href="#shell流程控制"><span>Shell流程控制</span></a></h2><h3 id="if-else" tabindex="-1"><a class="header-anchor" href="#if-else"><span>if else</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [ condition ]; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">then</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # do something</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">elif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [ another_condition ]; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">then</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # do something else</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # default action</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">fi</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="case语句" tabindex="-1"><a class="header-anchor" href="#case语句"><span>case语句</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">case</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $variable</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> in</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">    pattern1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # code block for pattern1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        ;;</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">    pattern2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # code block for pattern2</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        ;;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    *)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # default action</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        ;;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">esac</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="select语句" tabindex="-1"><a class="header-anchor" href="#select语句"><span>select语句</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">select</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> choice</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> in option1 option2 option3; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">do</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    case</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $choice</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> in</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">        option1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;You selected option 1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;;</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">        option2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;You selected option 2&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;;</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">        option3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;You selected option 3&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        *) </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Invalid option&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    esac</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">done</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="while-until" tabindex="-1"><a class="header-anchor" href="#while-until"><span>while/until</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [ condition ]; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">do</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # do something</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">done</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">until</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [ condition ]; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">do</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # do something</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">done</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="for循环" tabindex="-1"><a class="header-anchor" href="#for循环"><span>for循环</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1..5}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">do</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Number: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">done</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> file</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> *.txt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">do</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Processing </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">done</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="shell函数和工具" tabindex="-1"><a class="header-anchor" href="#shell函数和工具"><span>Shell函数和工具</span></a></h2><h3 id="系统函数" tabindex="-1"><a class="header-anchor" href="#系统函数"><span>系统函数</span></a></h3><ul><li><strong>预定义函数</strong>：如 <code>cd</code>, <code>pwd</code>, <code>ls</code> 等，它们是 Shell 内置命令。</li><li><strong>自定义函数</strong>：用户可以定义自己的函数来封装重复使用的代码块。</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">function_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # function body</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="自定义函数" tabindex="-1"><a class="header-anchor" href="#自定义函数"><span>自定义函数</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">greet_user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Hello, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">$1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">!&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">greet_user</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Alice&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cut" tabindex="-1"><a class="header-anchor" href="#cut"><span>cut</span></a></h3><ul><li><strong>字段切割</strong>：从文件或标准输入中按列提取数据。</li><li><strong>选项</strong>：<code>-d</code> 指定分隔符，<code>-f</code> 指定要提取的字段。</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;,&#39;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f1,3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> file.csv</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="sed" tabindex="-1"><a class="header-anchor" href="#sed"><span>sed</span></a></h3><ul><li><strong>流编辑器</strong>：用于解析和转换文本。</li><li><strong>常用命令</strong>：<code>s/pattern/replacement/</code> 替换模式，<code>d</code> 删除行，<code>p</code> 打印行。</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sed</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;s/foo/bar/&#39;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> input.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="awk" tabindex="-1"><a class="header-anchor" href="#awk"><span>awk</span></a></h3><ul><li><strong>文本处理工具</strong>：强大的文本分析和处理程序。</li><li><strong>基本用法</strong>：<code>awk &#39;{print $1}&#39;</code> 打印每一行的第一个字段。</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">awk</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;{print $1}&#39;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> file.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="sort" tabindex="-1"><a class="header-anchor" href="#sort"><span>sort</span></a></h3><ul><li><strong>排序工具</strong>：对文件内容进行排序。</li><li><strong>选项</strong>：<code>-n</code> 数值排序，<code>-r</code> 逆序排序，<code>-k</code> 指定排序字段。</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sort</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -n</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -k2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> file.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr>`,66)]))}const k=s(n,[["render",h],["__file","shell.html.vue"]]),p=JSON.parse('{"path":"/tool/Linux/shell.html","title":"Shell脚本编程","lang":"en-US","frontmatter":{"order":20,"title":"Shell脚本编程","shortTitle":"Shell编程","icon":"terminal","description":"Shell基础概述 Shell变量 常用命令和运算符 Shell流程控制 Shell函数和工具 Shell基础概述 Shell脚本入门介绍 Shell 是一个命令行解释器，它为用户提供了与操作系统交互的接口。Shell 脚本是一种简单的编程语言，允许用户编写一系列命令来自动执行任务。通过 Shell 脚本，可以自动化日常操作、简化复杂的任务，并提高工作...","head":[["meta",{"property":"og:url","content":"https://x.app/tool/Linux/shell.html"}],["meta",{"property":"og:site_name","content":"doc"}],["meta",{"property":"og:title","content":"Shell脚本编程"}],["meta",{"property":"og:description","content":"Shell基础概述 Shell变量 常用命令和运算符 Shell流程控制 Shell函数和工具 Shell基础概述 Shell脚本入门介绍 Shell 是一个命令行解释器，它为用户提供了与操作系统交互的接口。Shell 脚本是一种简单的编程语言，允许用户编写一系列命令来自动执行任务。通过 Shell 脚本，可以自动化日常操作、简化复杂的任务，并提高工作..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-01-10T15:19:41.000Z"}],["meta",{"property":"article:author","content":"ventixy"}],["meta",{"property":"article:modified_time","content":"2025-01-10T15:19:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Shell脚本编程\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-10T15:19:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ventixy\\",\\"url\\":\\"https://www.ventix.top\\"}]}"]]},"headers":[{"level":2,"title":"Shell基础概述","slug":"shell基础概述","link":"#shell基础概述","children":[{"level":3,"title":"Shell脚本入门介绍","slug":"shell脚本入门介绍","link":"#shell脚本入门介绍","children":[]},{"level":3,"title":"Shell环境类型","slug":"shell环境类型","link":"#shell环境类型","children":[]},{"level":3,"title":"编写格式与执行方式","slug":"编写格式与执行方式","link":"#编写格式与执行方式","children":[]},{"level":3,"title":"多命令处理","slug":"多命令处理","link":"#多命令处理","children":[]}]},{"level":2,"title":"Shell变量","slug":"shell变量","link":"#shell变量","children":[{"level":3,"title":"自定义变量","slug":"自定义变量","link":"#自定义变量","children":[]},{"level":3,"title":"字符串和数组","slug":"字符串和数组","link":"#字符串和数组","children":[]},{"level":3,"title":"特殊符号变量","slug":"特殊符号变量","link":"#特殊符号变量","children":[]},{"level":3,"title":"环境变量","slug":"环境变量","link":"#环境变量","children":[]}]},{"level":2,"title":"常用命令和运算符","slug":"常用命令和运算符","link":"#常用命令和运算符","children":[{"level":3,"title":"Shell内置命令","slug":"shell内置命令","link":"#shell内置命令","children":[]},{"level":3,"title":"Shell计算命令","slug":"shell计算命令","link":"#shell计算命令","children":[]},{"level":3,"title":"Shell运算符","slug":"shell运算符","link":"#shell运算符","children":[]}]},{"level":2,"title":"Shell流程控制","slug":"shell流程控制","link":"#shell流程控制","children":[{"level":3,"title":"if else","slug":"if-else","link":"#if-else","children":[]},{"level":3,"title":"case语句","slug":"case语句","link":"#case语句","children":[]},{"level":3,"title":"select语句","slug":"select语句","link":"#select语句","children":[]},{"level":3,"title":"while/until","slug":"while-until","link":"#while-until","children":[]},{"level":3,"title":"for循环","slug":"for循环","link":"#for循环","children":[]}]},{"level":2,"title":"Shell函数和工具","slug":"shell函数和工具","link":"#shell函数和工具","children":[{"level":3,"title":"系统函数","slug":"系统函数","link":"#系统函数","children":[]},{"level":3,"title":"自定义函数","slug":"自定义函数","link":"#自定义函数","children":[]},{"level":3,"title":"cut","slug":"cut","link":"#cut","children":[]},{"level":3,"title":"sed","slug":"sed","link":"#sed","children":[]},{"level":3,"title":"awk","slug":"awk","link":"#awk","children":[]},{"level":3,"title":"sort","slug":"sort","link":"#sort","children":[]}]}],"git":{"createdTime":1736522381000,"updatedTime":1736522381000,"contributors":[{"name":"drizzle","email":"msdrizzle@outlook.com","commits":1}]},"readingTime":{"minutes":4.77,"words":1432},"filePathRelative":"tool/Linux/shell.md","localizedDate":"January 10, 2025","excerpt":"<ol>\\n<li><a href=\\"#shell%E5%9F%BA%E7%A1%80%E6%A6%82%E8%BF%B0\\">Shell基础概述</a></li>\\n<li><a href=\\"#shell%E5%8F%98%E9%87%8F\\">Shell变量</a></li>\\n<li><a href=\\"#%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%92%8C%E8%BF%90%E7%AE%97%E7%AC%A6\\">常用命令和运算符</a></li>\\n<li><a href=\\"#shell%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6\\">Shell流程控制</a></li>\\n<li><a href=\\"#shell%E5%87%BD%E6%95%B0%E5%92%8C%E5%B7%A5%E5%85%B7\\">Shell函数和工具</a></li>\\n</ol>","autoDesc":true}');export{k as comp,p as data};
